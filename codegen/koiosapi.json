[
  {
    "tags": [
      "Network"
    ],
    "responses": {
      "200": {
        "description": "Array of block summary (limit+paginated)",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "hash": {
                    "type": "string",
                    "description": "Hash of the block",
                    "example": "e8c6992d52cd74b577b79251e0351be25070797a0dbc486b2c284d0bf7aeea9c"
                  },
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number of the block",
                    "example": 321
                  },
                  "abs_slot": {
                    "type": "integer",
                    "description": "Absolute slot number of the block",
                    "example": 53384242
                  },
                  "epoch_slot": {
                    "type": "integer",
                    "description": "Slot number of the block in epoch",
                    "example": 75442
                  },
                  "block_no": {
                    "type": "integer",
                    "description": "Block height",
                    "nullable": true,
                    "example": 42325043
                  },
                  "block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the block",
                    "example": 1506635091
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Query Chain Tip",
    "description": "Get the tip info about the latest block seen by chain",
    "path": "/tip",
    "method": "get"
  },
  {
    "tags": [
      "Network"
    ],
    "responses": {
      "200": {
        "description": "Array of genesis parameters used to start each era on chain",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "networkmagic": {
                    "type": "string",
                    "example": 764824073,
                    "description": "Unique network identifier for chain"
                  },
                  "networkid": {
                    "type": "string",
                    "example": "Mainnet",
                    "description": "Network ID used at various CLI identification to distinguish between Mainnet and other networks"
                  },
                  "epochlength": {
                    "type": "string",
                    "example": 432000,
                    "description": "Number of slots in an epoch"
                  },
                  "slotlength": {
                    "type": "string",
                    "example": 1,
                    "description": "Duration of a single slot (in seconds)"
                  },
                  "maxlovelacesupply": {
                    "type": "string",
                    "example": 45000000000000000,
                    "description": "Maximum smallest units (lovelaces) supply for the blockchain"
                  },
                  "systemstart": {
                    "type": "integer",
                    "description": "UNIX timestamp of the first block (genesis) on chain",
                    "example": 1506203091
                  },
                  "activeslotcoeff": {
                    "type": "string",
                    "example": 0.05,
                    "description": "Active Slot Co-Efficient (f) - determines the _probability_ of number of slots in epoch that are expected to have blocks (so mainnet, this would be: 432000 * 0.05 = 21600 estimated blocks)"
                  },
                  "slotsperkesperiod": {
                    "type": "string",
                    "example": 129600,
                    "description": "Number of slots that represent a single KES period (a unit used for validation of KES key evolutions)"
                  },
                  "maxkesrevolutions": {
                    "type": "string",
                    "example": 62,
                    "description": "Number of KES key evolutions that will automatically occur before a KES (hot) key is expired. This parameter is for security of a pool, in case an operator had access to his hot(online) machine compromised"
                  },
                  "securityparam": {
                    "type": "string",
                    "example": 2160,
                    "description": "A unit (k) used to divide epochs to determine stability window (used in security checks like ensuring atleast 1 block was created in 3*k/f period, or to finalize next epoch's nonce at 4*k/f slots before end of epoch)"
                  },
                  "updatequorum": {
                    "type": "string",
                    "example": 5,
                    "description": "Number of BFT members that need to approve (via vote) a Protocol Update Proposal"
                  },
                  "alonzogenesis": {
                    "type": "string",
                    "example": "{\\\"lovelacePerUTxOWord\\\":34482,\\\"executionPrices\\\":{\\\"prSteps\\\":{\\\"numerator\\\":721,\\\"denominator\\\":10000000},...",
                    "description": "A JSON dump of Alonzo Genesis"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Get Genesis info",
    "description": "Get the Genesis parameters used to start specific era on chain",
    "path": "/genesis",
    "method": "get"
  },
  {
    "tags": [
      "Network"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_epoch_no",
        "description": "Epoch Number to fetch details for",
        "schema": {
          "type": "string",
          "example": 320
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of supply/reserves/utxo/fees/treasury stats",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number",
                    "example": 294
                  },
                  "circulation": {
                    "type": "string",
                    "description": "Circulating UTxOs for given epoch (in lovelaces)",
                    "example": 32081169442642320
                  },
                  "treasury": {
                    "type": "string",
                    "description": "Funds in treasury for given epoch (in lovelaces)",
                    "example": 637024173474141
                  },
                  "reward": {
                    "type": "string",
                    "description": "Rewards accumulated as of given epoch (in lovelaces)",
                    "example": 506871250479840
                  },
                  "supply": {
                    "type": "string",
                    "description": "Total Active Supply (sum of treasury funds, rewards, UTxOs, deposits and fees) for given epoch (in lovelaces)",
                    "example": 33228495612391330
                  },
                  "reserves": {
                    "type": "string",
                    "description": "Total Reserves yet to be unlocked on chain",
                    "example": 11771504387608670
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Get historical tokenomic stats",
    "description": "Get the circulating utxo, treasury, rewards, supply and reserves in lovelace for specified epoch, all epochs if empty",
    "path": "/totals",
    "method": "get"
  },
  {
    "tags": [
      "Network"
    ],
    "responses": {
      "200": {
        "description": "Array of unique param update proposals submitted on chain",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "tx_hash": {
                    "type": "string",
                    "description": "Hash identifier of the transaction",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "block_height": {
                    "type": "integer",
                    "description": "Block height",
                    "nullable": true,
                    "example": 42325043
                  },
                  "block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the block",
                    "example": 1506635091
                  },
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number",
                    "example": 294
                  },
                  "data": {
                    "type": "string",
                    "description": "JSON encoded data with details about the parameter update",
                    "example": {
                      "decentralisation": 0.9
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Param Update Proposals",
    "description": "Get all parameter update proposals submitted to the chain starting Shelley era",
    "path": "/param_updates",
    "method": "get"
  },
  {
    "tags": [
      "Epoch"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_epoch_no",
        "description": "Epoch Number to fetch details for",
        "schema": {
          "type": "string",
          "example": 320
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      },
      {
        "deprecated": false,
        "name": "_include_next_epoch",
        "description": "Include information about nearing but not yet started epoch, to get access to active stake snapshot information if available",
        "schema": {
          "type": "boolean",
          "example": "false"
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of detailed summary for each epoch",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number",
                    "example": 294
                  },
                  "out_sum": {
                    "type": "string",
                    "description": "Total output value across all transactions in epoch",
                    "example": 15432725054364942
                  },
                  "fees": {
                    "type": "string",
                    "description": "Total fees incurred by transactions in epoch",
                    "example": 74325855210
                  },
                  "tx_count": {
                    "type": "integer",
                    "description": "Number of transactions submitted in epoch",
                    "example": 357919
                  },
                  "blk_count": {
                    "type": "integer",
                    "description": "Number of blocks created in epoch",
                    "example": 17321
                  },
                  "start_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the epoch start",
                    "example": 1506203091
                  },
                  "end_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the epoch end",
                    "example": 1506635091
                  },
                  "first_block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the epoch's first block",
                    "example": 1506635091
                  },
                  "last_block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the epoch's last block",
                    "example": 1506635091
                  },
                  "active_stake": {
                    "type": "string",
                    "description": "Total active stake in epoch stake snapshot (null for pre-Shelley epochs)",
                    "example": 23395112387185880,
                    "nullable": true
                  },
                  "total_rewards": {
                    "type": "string",
                    "description": "Total rewards earned in epoch (null for pre-Shelley epochs)",
                    "example": 252902897534230,
                    "nullable": true
                  },
                  "avg_blk_reward": {
                    "type": "string",
                    "description": "Average block reward for epoch (null for pre-Shelley epochs)",
                    "example": 660233450,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Epoch Information",
    "description": "Get the epoch information, all epochs if no epoch specified",
    "path": "/epoch_info",
    "method": "get"
  },
  {
    "tags": [
      "Epoch"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_epoch_no",
        "description": "Epoch Number to fetch details for",
        "schema": {
          "type": "string",
          "example": 320
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of protocol parameters for each epoch",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number",
                    "example": 294
                  },
                  "min_fee_a": {
                    "type": "integer",
                    "description": "The 'a' parameter to calculate the minimum transaction fee",
                    "example": 44,
                    "nullable": true
                  },
                  "min_fee_b": {
                    "type": "integer",
                    "description": "The 'b' parameter to calculate the minimum transaction fee",
                    "example": 155381,
                    "nullable": true
                  },
                  "max_block_size": {
                    "type": "integer",
                    "description": "The maximum block size (in bytes)",
                    "example": 65536,
                    "nullable": true
                  },
                  "max_tx_size": {
                    "type": "integer",
                    "description": "The maximum transaction size (in bytes)",
                    "example": 16384,
                    "nullable": true
                  },
                  "max_bh_size": {
                    "type": "integer",
                    "description": "The maximum block header size (in bytes)",
                    "example": 1100,
                    "nullable": true
                  },
                  "key_deposit": {
                    "type": "string",
                    "description": "The amount (in lovelace) required for a deposit to register a stake address",
                    "example": 2000000,
                    "nullable": true
                  },
                  "pool_deposit": {
                    "type": "string",
                    "description": "The amount (in lovelace) required for a deposit to register a stake pool",
                    "example": 500000000,
                    "nullable": true
                  },
                  "max_epoch": {
                    "type": "integer",
                    "description": "The maximum number of epochs in the future that a pool retirement is allowed to be scheduled for",
                    "example": 18,
                    "nullable": true
                  },
                  "optimal_pool_count": {
                    "type": "integer",
                    "description": "The optimal number of stake pools",
                    "example": 500,
                    "nullable": true
                  },
                  "influence": {
                    "type": "number",
                    "format": "double",
                    "description": "The pledge influence on pool rewards",
                    "example": 0.3,
                    "nullable": true
                  },
                  "monetary_expand_rate": {
                    "type": "number",
                    "format": "double",
                    "description": "The monetary expansion rate",
                    "example": 0.003,
                    "nullable": true
                  },
                  "treasury_growth_rate": {
                    "type": "number",
                    "format": "double",
                    "description": "The treasury growth rate",
                    "example": 0.2,
                    "nullable": true
                  },
                  "decentralisation": {
                    "type": "number",
                    "format": "double",
                    "description": "The decentralisation parameter (1 fully centralised, 0 fully decentralised)",
                    "example": 0.1,
                    "nullable": true
                  },
                  "extra_entropy": {
                    "type": "string",
                    "description": "The hash of 32-byte string of extra random-ness added into the protocol's entropy pool",
                    "example": "d982e06fd33e7440b43cefad529b7ecafbaa255e38178ad4189a37e4ce9bf1fa",
                    "nullable": true
                  },
                  "protocol_major": {
                    "type": "integer",
                    "description": "The protocol major version",
                    "example": 5,
                    "nullable": true
                  },
                  "protocol_minor": {
                    "type": "integer",
                    "description": "The protocol minor version",
                    "example": 0,
                    "nullable": true
                  },
                  "min_utxo_value": {
                    "type": "string",
                    "description": "The minimum value of a UTxO entry",
                    "example": 34482,
                    "nullable": true
                  },
                  "min_pool_cost": {
                    "type": "string",
                    "description": "The minimum pool cost",
                    "example": 340000000,
                    "nullable": true
                  },
                  "nonce": {
                    "type": "string",
                    "description": "The nonce value for this epoch",
                    "example": "01304ddf5613166be96fce27be110747f2c8fcb38776618ee79225ccb59b81e2",
                    "nullable": true
                  },
                  "block_hash": {
                    "type": "string",
                    "description": "The hash of the first block where these parameters are valid",
                    "example": "f9dc2a2fc3a2db09a71af007a740261de585afc9e3022b8e30535592ff4dd9e5"
                  },
                  "cost_models": {
                    "type": "string",
                    "description": "The per language cost models",
                    "example": null,
                    "nullable": true
                  },
                  "price_mem": {
                    "type": "number",
                    "format": "double",
                    "description": "The per word cost of script memory usage",
                    "example": 0.0577,
                    "nullable": true
                  },
                  "price_step": {
                    "type": "number",
                    "format": "double",
                    "description": "The cost of script execution step usage",
                    "example": 0.0000721,
                    "nullable": true
                  },
                  "max_tx_ex_mem": {
                    "type": "number",
                    "description": "The maximum number of execution memory allowed to be used in a single transaction",
                    "example": 10000000,
                    "nullable": true
                  },
                  "max_tx_ex_steps": {
                    "type": "number",
                    "description": "The maximum number of execution steps allowed to be used in a single transaction",
                    "example": 10000000000,
                    "nullable": true
                  },
                  "max_block_ex_mem": {
                    "type": "number",
                    "description": "The maximum number of execution memory allowed to be used in a single block",
                    "example": 50000000,
                    "nullable": true
                  },
                  "max_block_ex_steps": {
                    "type": "number",
                    "description": "The maximum number of execution steps allowed to be used in a single block",
                    "example": 40000000000,
                    "nullable": true
                  },
                  "max_val_size": {
                    "type": "number",
                    "description": "The maximum Val size",
                    "example": 5000,
                    "nullable": true
                  },
                  "collateral_percent": {
                    "type": "integer",
                    "description": "The percentage of the tx fee which must be provided as collateral when including non-native scripts",
                    "example": 150,
                    "nullable": true
                  },
                  "max_collateral_inputs": {
                    "type": "integer",
                    "description": "The maximum number of collateral inputs allowed in a transaction",
                    "example": 3,
                    "nullable": true
                  },
                  "coins_per_utxo_size": {
                    "type": "string",
                    "description": "The cost per UTxO size",
                    "example": 34482,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Epoch's Protocol Parameters",
    "description": "Get the protocol parameters for specific epoch, returns information about all epochs if no epoch specified",
    "path": "/epoch_params",
    "method": "get"
  },
  {
    "tags": [
      "Epoch"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_epoch_no",
        "description": "Epoch Number to fetch details for",
        "schema": {
          "type": "string",
          "example": 320
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of distinct block protocol versions counts in epoch",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "proto_major": {
                    "type": "integer",
                    "description": "Protocol major version",
                    "example": 6
                  },
                  "proto_minor": {
                    "type": "integer",
                    "description": "Protocol major version",
                    "example": 2
                  },
                  "blocks": {
                    "type": "integer",
                    "description": "Amount of blocks with specified major and protocol combination",
                    "example": 2183
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Epoch's Block Protocols",
    "description": "Get the information about block protocol distribution in epoch",
    "path": "/epoch_block_protocols",
    "method": "get"
  },
  {
    "tags": [
      "Block"
    ],
    "responses": {
      "200": {
        "description": "Array of block information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hash": {
                    "type": "string",
                    "description": "Hash of the block",
                    "example": "e8c6992d52cd74b577b79251e0351be25070797a0dbc486b2c284d0bf7aeea9c"
                  },
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number of the block",
                    "example": 321
                  },
                  "abs_slot": {
                    "type": "integer",
                    "description": "Absolute slot number of the block",
                    "example": 53384242
                  },
                  "epoch_slot": {
                    "type": "integer",
                    "description": "Slot number of the block in epoch",
                    "example": 75442
                  },
                  "block_height": {
                    "type": "integer",
                    "description": "Block height",
                    "nullable": true,
                    "example": 42325043
                  },
                  "block_size": {
                    "type": "integer",
                    "description": "Block size in bytes",
                    "example": 79109
                  },
                  "block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the block",
                    "example": 1506635091
                  },
                  "tx_count": {
                    "type": "integer",
                    "description": "Number of transactions in the block",
                    "example": 44
                  },
                  "vrf_key": {
                    "type": "string",
                    "description": "VRF key of the block producer",
                    "example": "vrf_vk1pmxyz8efuyj6eq6zkk373f28u47v06nwp5t59jr5fcmcusaazlmqhxu8k2"
                  },
                  "pool": {
                    "type": "string",
                    "description": "Pool ID in bech32 format (null for pre-Shelley blocks)",
                    "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc",
                    "nullable": true
                  },
                  "op_cert_counter": {
                    "type": "integer",
                    "description": "Counter value of the operational certificate used to create this block",
                    "example": 8
                  },
                  "proto_major": {
                    "type": "integer",
                    "description": "The protocol major version",
                    "example": 5,
                    "nullable": true
                  },
                  "proto_minor": {
                    "type": "integer",
                    "description": "The protocol minor version",
                    "example": 0,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Block List",
    "description": "Get summarised details about all blocks (paginated - latest first)",
    "path": "/blocks",
    "method": "get"
  },
  {
    "tags": [
      "Block"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_block_hashes"
            ],
            "type": "object",
            "properties": {
              "_block_hashes": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Hash of the block",
                  "example": "e8c6992d52cd74b577b79251e0351be25070797a0dbc486b2c284d0bf7aeea9c"
                }
              }
            },
            "example": {
              "_block_hashes": [
                "fb9087c9f1408a7bbd7b022fd294ab565fec8dd3a8ef091567482722a1fa4e30",
                "60188a8dcb6db0d80628815be2cf626c4d17cb3e826cebfca84adaff93ad492a",
                "c6646214a1f377aa461a0163c213fc6b86a559a2d6ebd647d54c4eb00aaab015"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of detailed block information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hash": {
                    "type": "string",
                    "description": "Hash of the block",
                    "example": "e8c6992d52cd74b577b79251e0351be25070797a0dbc486b2c284d0bf7aeea9c"
                  },
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number of the block",
                    "example": 321
                  },
                  "abs_slot": {
                    "type": "integer",
                    "description": "Absolute slot number of the block",
                    "example": 53384242
                  },
                  "epoch_slot": {
                    "type": "integer",
                    "description": "Slot number of the block in epoch",
                    "example": 75442
                  },
                  "block_height": {
                    "type": "integer",
                    "description": "Block height",
                    "nullable": true,
                    "example": 42325043
                  },
                  "block_size": {
                    "type": "integer",
                    "description": "Block size in bytes",
                    "example": 79109
                  },
                  "block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the block",
                    "example": 1506635091
                  },
                  "tx_count": {
                    "type": "integer",
                    "description": "Number of transactions in the block",
                    "example": 44
                  },
                  "vrf_key": {
                    "type": "string",
                    "description": "VRF key of the block producer",
                    "example": "vrf_vk1pmxyz8efuyj6eq6zkk373f28u47v06nwp5t59jr5fcmcusaazlmqhxu8k2"
                  },
                  "op_cert": {
                    "type": "string",
                    "description": "Hash of the block producers' operational certificate",
                    "example": "16bfc28a7127d11805fe02df67f8c3909ab7e2e2cd81b6954d90eeff1938614c"
                  },
                  "op_cert_counter": {
                    "type": "integer",
                    "description": "Counter value of the operational certificate used to create this block",
                    "example": 8
                  },
                  "pool": {
                    "type": "string",
                    "description": "Pool ID in bech32 format (null for pre-Shelley blocks)",
                    "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc",
                    "nullable": true
                  },
                  "proto_major": {
                    "type": "integer",
                    "description": "The protocol major version",
                    "example": 5,
                    "nullable": true
                  },
                  "proto_minor": {
                    "type": "integer",
                    "description": "The protocol minor version",
                    "example": 0,
                    "nullable": true
                  },
                  "total_output": {
                    "type": "string",
                    "description": "Total output of the block (in lovelace)",
                    "example": 92384672389,
                    "nullable": true
                  },
                  "total_fees": {
                    "type": "string",
                    "description": "Total fees of the block (in lovelace)",
                    "example": 2346834,
                    "nullable": true
                  },
                  "num_confirmations": {
                    "type": "integer",
                    "description": "Number of confirmations for the block",
                    "example": 664275
                  },
                  "parent_hash": {
                    "type": "string",
                    "description": "Hash of the parent of this block",
                    "example": "16bfc28a7127d11805fe02df67f8c3909ab7e2e2cd81b6954d90eeff1938614c"
                  },
                  "child_hash": {
                    "type": "string",
                    "description": "Hash of the child of this block (if present)",
                    "example": "a3b525ba0747ce9daa928fa28fbc680f95e6927943a1fbd6fa5394d96c9dc2fa"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Block Information",
    "description": "Get detailed information about a specific block",
    "path": "/block_info",
    "method": "post"
  },
  {
    "tags": [
      "Block"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_block_hashes"
            ],
            "type": "object",
            "properties": {
              "_block_hashes": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Hash of the block",
                  "example": "e8c6992d52cd74b577b79251e0351be25070797a0dbc486b2c284d0bf7aeea9c"
                }
              }
            },
            "example": {
              "_block_hashes": [
                "fb9087c9f1408a7bbd7b022fd294ab565fec8dd3a8ef091567482722a1fa4e30",
                "60188a8dcb6db0d80628815be2cf626c4d17cb3e826cebfca84adaff93ad492a",
                "c6646214a1f377aa461a0163c213fc6b86a559a2d6ebd647d54c4eb00aaab015"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of transactions hashes",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "block_hash": {
                    "type": "string",
                    "description": "Hash of the block",
                    "example": "e8c6992d52cd74b577b79251e0351be25070797a0dbc486b2c284d0bf7aeea9c"
                  },
                  "tx_hashes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Hash identifier of the transaction",
                      "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Block Transactions",
    "description": "Get a list of all transactions included in provided blocks",
    "path": "/block_txs",
    "method": "post"
  },
  {
    "tags": [
      "Transactions"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_tx_hashes"
            ],
            "type": "object",
            "properties": {
              "_tx_hashes": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano Transaction hashes"
              }
            },
            "example": {
              "_tx_hashes": [
                "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e",
                "0b8ba3bed976fa4913f19adc9f6dd9063138db5b4dd29cecde369456b5155e94"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of detailed information about transaction(s)",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "tx_hash": {
                    "type": "string",
                    "description": "Hash identifier of the transaction",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "block_hash": {
                    "type": "string",
                    "description": "Hash of the block",
                    "example": "e8c6992d52cd74b577b79251e0351be25070797a0dbc486b2c284d0bf7aeea9c"
                  },
                  "block_height": {
                    "type": "integer",
                    "description": "Block height",
                    "nullable": true,
                    "example": 42325043
                  },
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number of the block",
                    "example": 321
                  },
                  "epoch_slot": {
                    "type": "integer",
                    "description": "Slot number of the block in epoch",
                    "example": 75442
                  },
                  "absolute_slot": {
                    "type": "integer",
                    "description": "Absolute slot number of the block",
                    "example": 53384242
                  },
                  "tx_timestamp": {
                    "type": "integer",
                    "description": "UNIX timestamp of the transaction",
                    "example": 1506635091
                  },
                  "tx_block_index": {
                    "type": "integer",
                    "description": "Index of transaction within block",
                    "example": 6
                  },
                  "tx_size": {
                    "type": "integer",
                    "description": "Size in bytes of transaction",
                    "example": 391
                  },
                  "total_output": {
                    "type": "string",
                    "description": "Total sum of all transaction outputs (in lovelaces)",
                    "example": 157832856
                  },
                  "fee": {
                    "type": "string",
                    "description": "Total Transaction fee (in lovelaces)",
                    "example": 172761
                  },
                  "deposit": {
                    "type": "string",
                    "description": "Total Deposits included in transaction (for example, if it is registering a pool/key)",
                    "example": 0
                  },
                  "invalid_before": {
                    "type": "string",
                    "description": "Slot before which transaction cannot be validated (if supplied, else null)",
                    "nullable": true
                  },
                  "invalid_after": {
                    "type": "string",
                    "description": "Slot after which transaction cannot be validated",
                    "example": 42332172,
                    "nullable": true
                  },
                  "collateral_inputs": {
                    "type": "array",
                    "description": "An array of UTxO outputs created by the transaction",
                    "items": {
                      "type": "object",
                      "properties": {
                        "payment_addr": {
                          "type": "object",
                          "properties": {
                            "bech32": {
                              "type": "string",
                              "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned",
                              "example": "addr1q80rc8zj06yzdwwdyqc03rm4l3zv6n89rxuaak0t099n09yssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqad9mkw"
                            },
                            "cred": {
                              "type": "string",
                              "description": "Payment credential",
                              "example": "de3c1c527e8826b9cd2030f88f75fc44cd4ce519b9ded9eb794b3794"
                            }
                          }
                        },
                        "stake_addr": {
                          "nullable": true,
                          "allOf": [
                            {
                              "type": "string",
                              "description": "Cardano staking address (reward account) in bech32 format",
                              "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                            }
                          ]
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "Hash of transaction for UTxO",
                          "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                        },
                        "tx_index": {
                          "type": "integer",
                          "description": "Index of UTxO in the transaction",
                          "example": 0
                        },
                        "value": {
                          "type": "string",
                          "description": "Total sum of ADA on the UTxO",
                          "example": 157832856
                        },
                        "datum_hash": {
                          "type": "string",
                          "nullable": true,
                          "description": "Hash of datum (if any) connected to UTxO",
                          "example": "30c16dd243324cf9d90ffcf211b9e0f2117a7dc28d17e85927dfe2af3328e5c9"
                        },
                        "inline_datum": {
                          "type": "object",
                          "nullable": true,
                          "description": "Allows datums to be attached to UTxO (CIP-32)",
                          "properties": {
                            "bytes": {
                              "type": "string",
                              "description": "Datum bytes (hex)",
                              "example": "19029a"
                            },
                            "value": {
                              "type": "object",
                              "description": "Value (json)",
                              "example": {
                                "int": 666
                              }
                            }
                          }
                        },
                        "reference_script": {
                          "type": "object",
                          "nullable": true,
                          "description": "Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)",
                          "properties": {
                            "hash": {
                              "type": "string",
                              "description": "Hash of referenced script",
                              "example": "67f33146617a5e61936081db3b2117cbf59bd2123748f58ac9678656"
                            },
                            "size": {
                              "type": "integer",
                              "description": "Size in bytes",
                              "example": 14
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of script",
                              "example": "plutusV1"
                            },
                            "bytes": {
                              "type": "string",
                              "description": "Script bytes (hex)",
                              "example": "4e4d01000033222220051200120011"
                            },
                            "value": {
                              "type": "object",
                              "nullable": true,
                              "description": "Value (json)",
                              "example": null
                            }
                          }
                        },
                        "asset_list": {
                          "type": "array",
                          "nullable": true,
                          "description": "An array of assets on the UTxO",
                          "items": {
                            "properties": {
                              "policy_id": {
                                "type": "string",
                                "description": "Asset Policy ID (hex)",
                                "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                              },
                              "asset_name": {
                                "type": "string",
                                "nullable": true,
                                "description": "Asset Name (hex)",
                                "example": "444f4e545350414d"
                              },
                              "fingerprint": {
                                "type": "string",
                                "description": "The CIP14 fingerprint of the asset",
                                "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                              },
                              "decimals": {
                                "type": "integer",
                                "description": "Asset decimals",
                                "example": 6
                              },
                              "quantity": {
                                "type": "string",
                                "description": "Quantity of assets on the UTxO",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "collateral_output": {
                    "type": "object",
                    "properties": {
                      "payment_addr": {
                        "type": "object",
                        "properties": {
                          "bech32": {
                            "type": "string",
                            "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned",
                            "example": "addr1q80rc8zj06yzdwwdyqc03rm4l3zv6n89rxuaak0t099n09yssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqad9mkw"
                          },
                          "cred": {
                            "type": "string",
                            "description": "Payment credential",
                            "example": "de3c1c527e8826b9cd2030f88f75fc44cd4ce519b9ded9eb794b3794"
                          }
                        }
                      },
                      "stake_addr": {
                        "nullable": true,
                        "allOf": [
                          {
                            "type": "string",
                            "description": "Cardano staking address (reward account) in bech32 format",
                            "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                          }
                        ]
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "Hash of transaction for UTxO",
                        "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                      },
                      "tx_index": {
                        "type": "integer",
                        "description": "Index of UTxO in the transaction",
                        "example": 0
                      },
                      "value": {
                        "type": "string",
                        "description": "Total sum of ADA on the UTxO",
                        "example": 157832856
                      },
                      "datum_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Hash of datum (if any) connected to UTxO",
                        "example": "30c16dd243324cf9d90ffcf211b9e0f2117a7dc28d17e85927dfe2af3328e5c9"
                      },
                      "inline_datum": {
                        "type": "object",
                        "nullable": true,
                        "description": "Allows datums to be attached to UTxO (CIP-32)",
                        "properties": {
                          "bytes": {
                            "type": "string",
                            "description": "Datum bytes (hex)",
                            "example": "19029a"
                          },
                          "value": {
                            "type": "object",
                            "description": "Value (json)",
                            "example": {
                              "int": 666
                            }
                          }
                        }
                      },
                      "reference_script": {
                        "type": "object",
                        "nullable": true,
                        "description": "Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)",
                        "properties": {
                          "hash": {
                            "type": "string",
                            "description": "Hash of referenced script",
                            "example": "67f33146617a5e61936081db3b2117cbf59bd2123748f58ac9678656"
                          },
                          "size": {
                            "type": "integer",
                            "description": "Size in bytes",
                            "example": 14
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of script",
                            "example": "plutusV1"
                          },
                          "bytes": {
                            "type": "string",
                            "description": "Script bytes (hex)",
                            "example": "4e4d01000033222220051200120011"
                          },
                          "value": {
                            "type": "object",
                            "nullable": true,
                            "description": "Value (json)",
                            "example": null
                          }
                        }
                      },
                      "asset_list": {
                        "type": "array",
                        "nullable": true,
                        "description": "An array of assets on the UTxO",
                        "items": {
                          "properties": {
                            "policy_id": {
                              "type": "string",
                              "description": "Asset Policy ID (hex)",
                              "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                            },
                            "asset_name": {
                              "type": "string",
                              "nullable": true,
                              "description": "Asset Name (hex)",
                              "example": "444f4e545350414d"
                            },
                            "fingerprint": {
                              "type": "string",
                              "description": "The CIP14 fingerprint of the asset",
                              "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                            },
                            "decimals": {
                              "type": "integer",
                              "description": "Asset decimals",
                              "example": 6
                            },
                            "quantity": {
                              "type": "string",
                              "description": "Quantity of assets on the UTxO",
                              "example": 1
                            }
                          }
                        }
                      }
                    }
                  },
                  "reference_inputs": {
                    "type": "array",
                    "description": "An array of UTxO outputs created by the transaction",
                    "items": {
                      "type": "object",
                      "properties": {
                        "payment_addr": {
                          "type": "object",
                          "properties": {
                            "bech32": {
                              "type": "string",
                              "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned",
                              "example": "addr1q80rc8zj06yzdwwdyqc03rm4l3zv6n89rxuaak0t099n09yssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqad9mkw"
                            },
                            "cred": {
                              "type": "string",
                              "description": "Payment credential",
                              "example": "de3c1c527e8826b9cd2030f88f75fc44cd4ce519b9ded9eb794b3794"
                            }
                          }
                        },
                        "stake_addr": {
                          "nullable": true,
                          "allOf": [
                            {
                              "type": "string",
                              "description": "Cardano staking address (reward account) in bech32 format",
                              "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                            }
                          ]
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "Hash of transaction for UTxO",
                          "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                        },
                        "tx_index": {
                          "type": "integer",
                          "description": "Index of UTxO in the transaction",
                          "example": 0
                        },
                        "value": {
                          "type": "string",
                          "description": "Total sum of ADA on the UTxO",
                          "example": 157832856
                        },
                        "datum_hash": {
                          "type": "string",
                          "nullable": true,
                          "description": "Hash of datum (if any) connected to UTxO",
                          "example": "30c16dd243324cf9d90ffcf211b9e0f2117a7dc28d17e85927dfe2af3328e5c9"
                        },
                        "inline_datum": {
                          "type": "object",
                          "nullable": true,
                          "description": "Allows datums to be attached to UTxO (CIP-32)",
                          "properties": {
                            "bytes": {
                              "type": "string",
                              "description": "Datum bytes (hex)",
                              "example": "19029a"
                            },
                            "value": {
                              "type": "object",
                              "description": "Value (json)",
                              "example": {
                                "int": 666
                              }
                            }
                          }
                        },
                        "reference_script": {
                          "type": "object",
                          "nullable": true,
                          "description": "Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)",
                          "properties": {
                            "hash": {
                              "type": "string",
                              "description": "Hash of referenced script",
                              "example": "67f33146617a5e61936081db3b2117cbf59bd2123748f58ac9678656"
                            },
                            "size": {
                              "type": "integer",
                              "description": "Size in bytes",
                              "example": 14
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of script",
                              "example": "plutusV1"
                            },
                            "bytes": {
                              "type": "string",
                              "description": "Script bytes (hex)",
                              "example": "4e4d01000033222220051200120011"
                            },
                            "value": {
                              "type": "object",
                              "nullable": true,
                              "description": "Value (json)",
                              "example": null
                            }
                          }
                        },
                        "asset_list": {
                          "type": "array",
                          "nullable": true,
                          "description": "An array of assets on the UTxO",
                          "items": {
                            "properties": {
                              "policy_id": {
                                "type": "string",
                                "description": "Asset Policy ID (hex)",
                                "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                              },
                              "asset_name": {
                                "type": "string",
                                "nullable": true,
                                "description": "Asset Name (hex)",
                                "example": "444f4e545350414d"
                              },
                              "fingerprint": {
                                "type": "string",
                                "description": "The CIP14 fingerprint of the asset",
                                "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                              },
                              "decimals": {
                                "type": "integer",
                                "description": "Asset decimals",
                                "example": 6
                              },
                              "quantity": {
                                "type": "string",
                                "description": "Quantity of assets on the UTxO",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "inputs": {
                    "type": "array",
                    "description": "An array of UTxO outputs created by the transaction",
                    "items": {
                      "type": "object",
                      "properties": {
                        "payment_addr": {
                          "type": "object",
                          "properties": {
                            "bech32": {
                              "type": "string",
                              "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned",
                              "example": "addr1q80rc8zj06yzdwwdyqc03rm4l3zv6n89rxuaak0t099n09yssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqad9mkw"
                            },
                            "cred": {
                              "type": "string",
                              "description": "Payment credential",
                              "example": "de3c1c527e8826b9cd2030f88f75fc44cd4ce519b9ded9eb794b3794"
                            }
                          }
                        },
                        "stake_addr": {
                          "nullable": true,
                          "allOf": [
                            {
                              "type": "string",
                              "description": "Cardano staking address (reward account) in bech32 format",
                              "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                            }
                          ]
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "Hash of transaction for UTxO",
                          "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                        },
                        "tx_index": {
                          "type": "integer",
                          "description": "Index of UTxO in the transaction",
                          "example": 0
                        },
                        "value": {
                          "type": "string",
                          "description": "Total sum of ADA on the UTxO",
                          "example": 157832856
                        },
                        "datum_hash": {
                          "type": "string",
                          "nullable": true,
                          "description": "Hash of datum (if any) connected to UTxO",
                          "example": "30c16dd243324cf9d90ffcf211b9e0f2117a7dc28d17e85927dfe2af3328e5c9"
                        },
                        "inline_datum": {
                          "type": "object",
                          "nullable": true,
                          "description": "Allows datums to be attached to UTxO (CIP-32)",
                          "properties": {
                            "bytes": {
                              "type": "string",
                              "description": "Datum bytes (hex)",
                              "example": "19029a"
                            },
                            "value": {
                              "type": "object",
                              "description": "Value (json)",
                              "example": {
                                "int": 666
                              }
                            }
                          }
                        },
                        "reference_script": {
                          "type": "object",
                          "nullable": true,
                          "description": "Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)",
                          "properties": {
                            "hash": {
                              "type": "string",
                              "description": "Hash of referenced script",
                              "example": "67f33146617a5e61936081db3b2117cbf59bd2123748f58ac9678656"
                            },
                            "size": {
                              "type": "integer",
                              "description": "Size in bytes",
                              "example": 14
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of script",
                              "example": "plutusV1"
                            },
                            "bytes": {
                              "type": "string",
                              "description": "Script bytes (hex)",
                              "example": "4e4d01000033222220051200120011"
                            },
                            "value": {
                              "type": "object",
                              "nullable": true,
                              "description": "Value (json)",
                              "example": null
                            }
                          }
                        },
                        "asset_list": {
                          "type": "array",
                          "nullable": true,
                          "description": "An array of assets on the UTxO",
                          "items": {
                            "properties": {
                              "policy_id": {
                                "type": "string",
                                "description": "Asset Policy ID (hex)",
                                "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                              },
                              "asset_name": {
                                "type": "string",
                                "nullable": true,
                                "description": "Asset Name (hex)",
                                "example": "444f4e545350414d"
                              },
                              "fingerprint": {
                                "type": "string",
                                "description": "The CIP14 fingerprint of the asset",
                                "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                              },
                              "decimals": {
                                "type": "integer",
                                "description": "Asset decimals",
                                "example": 6
                              },
                              "quantity": {
                                "type": "string",
                                "description": "Quantity of assets on the UTxO",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "outputs": {
                    "type": "array",
                    "description": "An array of UTxO outputs created by the transaction",
                    "items": {
                      "type": "object",
                      "properties": {
                        "payment_addr": {
                          "type": "object",
                          "properties": {
                            "bech32": {
                              "type": "string",
                              "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned",
                              "example": "addr1q80rc8zj06yzdwwdyqc03rm4l3zv6n89rxuaak0t099n09yssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqad9mkw"
                            },
                            "cred": {
                              "type": "string",
                              "description": "Payment credential",
                              "example": "de3c1c527e8826b9cd2030f88f75fc44cd4ce519b9ded9eb794b3794"
                            }
                          }
                        },
                        "stake_addr": {
                          "nullable": true,
                          "allOf": [
                            {
                              "type": "string",
                              "description": "Cardano staking address (reward account) in bech32 format",
                              "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                            }
                          ]
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "Hash of transaction for UTxO",
                          "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                        },
                        "tx_index": {
                          "type": "integer",
                          "description": "Index of UTxO in the transaction",
                          "example": 0
                        },
                        "value": {
                          "type": "string",
                          "description": "Total sum of ADA on the UTxO",
                          "example": 157832856
                        },
                        "datum_hash": {
                          "type": "string",
                          "nullable": true,
                          "description": "Hash of datum (if any) connected to UTxO",
                          "example": "30c16dd243324cf9d90ffcf211b9e0f2117a7dc28d17e85927dfe2af3328e5c9"
                        },
                        "inline_datum": {
                          "type": "object",
                          "nullable": true,
                          "description": "Allows datums to be attached to UTxO (CIP-32)",
                          "properties": {
                            "bytes": {
                              "type": "string",
                              "description": "Datum bytes (hex)",
                              "example": "19029a"
                            },
                            "value": {
                              "type": "object",
                              "description": "Value (json)",
                              "example": {
                                "int": 666
                              }
                            }
                          }
                        },
                        "reference_script": {
                          "type": "object",
                          "nullable": true,
                          "description": "Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)",
                          "properties": {
                            "hash": {
                              "type": "string",
                              "description": "Hash of referenced script",
                              "example": "67f33146617a5e61936081db3b2117cbf59bd2123748f58ac9678656"
                            },
                            "size": {
                              "type": "integer",
                              "description": "Size in bytes",
                              "example": 14
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of script",
                              "example": "plutusV1"
                            },
                            "bytes": {
                              "type": "string",
                              "description": "Script bytes (hex)",
                              "example": "4e4d01000033222220051200120011"
                            },
                            "value": {
                              "type": "object",
                              "nullable": true,
                              "description": "Value (json)",
                              "example": null
                            }
                          }
                        },
                        "asset_list": {
                          "type": "array",
                          "nullable": true,
                          "description": "An array of assets on the UTxO",
                          "items": {
                            "properties": {
                              "policy_id": {
                                "type": "string",
                                "description": "Asset Policy ID (hex)",
                                "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                              },
                              "asset_name": {
                                "type": "string",
                                "nullable": true,
                                "description": "Asset Name (hex)",
                                "example": "444f4e545350414d"
                              },
                              "fingerprint": {
                                "type": "string",
                                "description": "The CIP14 fingerprint of the asset",
                                "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                              },
                              "decimals": {
                                "type": "integer",
                                "description": "Asset decimals",
                                "example": 6
                              },
                              "quantity": {
                                "type": "string",
                                "description": "Quantity of assets on the UTxO",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "withdrawals": {
                    "type": "array",
                    "description": "Array of withdrawals with-in a transaction",
                    "nullable": true,
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string",
                          "description": "Withdrawal amount (in lovelaces)",
                          "example": 9845162
                        },
                        "stake_addr": {
                          "type": "string",
                          "description": "A Cardano staking address (reward account, bech32 encoded)",
                          "example": "stake1uxggf4shfvpghcangm67ky0q4zlc3xn7gezy0auhxczu3pslm9wrj"
                        }
                      }
                    }
                  },
                  "assets_minted": {
                    "type": "array",
                    "description": "Array of minted assets with-in a transaction",
                    "nullable": true,
                    "items": {
                      "properties": {
                        "policy_id": {
                          "type": "string",
                          "description": "Asset Policy ID (hex)",
                          "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                        },
                        "asset_name": {
                          "type": "string",
                          "nullable": true,
                          "description": "Asset Name (hex)",
                          "example": "444f4e545350414d"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "The CIP14 fingerprint of the asset",
                          "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                        },
                        "decimals": {
                          "type": "integer",
                          "description": "Asset decimals",
                          "example": 6
                        },
                        "quantity": {
                          "type": "string",
                          "description": "Quantity of minted assets (negative on burn)",
                          "example": 1
                        }
                      }
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "nullable": true,
                    "description": "A JSON array containing details about metadata within transaction",
                    "example": {
                      "721": {
                        "version": 1,
                        "copyright": "...",
                        "publisher": [
                          "p...o"
                        ],
                        "4bf184e01e0f163296ab253edd60774e2d34367d0e7b6cbc689b567d": {}
                      }
                    }
                  },
                  "certificates": {
                    "type": "array",
                    "nullable": true,
                    "description": "Certificates present with-in a transaction (if any)",
                    "items": {
                      "properties": {
                        "index": {
                          "type": "integer",
                          "nullable": true,
                          "description": "Certificate index",
                          "example": 0
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of certificate (could be delegation, stake_registration, stake_deregistraion, pool_update, pool_retire, param_proposal, reserve_MIR, treasury_MIR)",
                          "example": "delegation"
                        },
                        "info": {
                          "type": "object",
                          "description": "A JSON array containing information from the certificate",
                          "nullable": true,
                          "example": {
                            "stake_address": "stake1uxggf4shfvpghcangm67ky0q4zlc3xn7gezy0auhxczu3pslm9wrj",
                            "pool": "pool1k53pf4wzn263c08e3wr3gttndfecm9f4uzekgctcx947vt7fh2p"
                          }
                        }
                      }
                    }
                  },
                  "native_scripts": {
                    "type": "array",
                    "nullable": true,
                    "description": "Native scripts present in a transaction (if any)",
                    "items": {
                      "properties": {
                        "script_hash": {
                          "type": "string",
                          "description": "Hash of a script",
                          "example": "d8480dc869b94b80e81ec91b0abe307279311fe0e7001a9488f61ff8"
                        },
                        "script_json": {
                          "type": "object",
                          "description": "JSON representation of the timelock script (null for other script types)",
                          "example": {
                            "type": "all",
                            "scripts": [
                              {
                                "type": "sig",
                                "keyHash": "a96da581c39549aeda81f539ac3940ac0cb53657e774ca7e68f15ed9"
                              },
                              {
                                "type": "sig",
                                "keyHash": "ccfcb3fed004562be1354c837a4a4b9f4b1c2b6705229efeedd12d4d"
                              },
                              {
                                "type": "sig",
                                "keyHash": "74fcd61aecebe36aa6b6cd4314027282fa4b41c3ce8af17d9b77d0d1"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "plutus_contracts": {
                    "type": "array",
                    "description": "Plutus contracts present in transaction (if any)",
                    "items": {
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "Plutus script address",
                          "example": "addr1w999n67e86jn6xal07pzxtrmqynspgx0fwmcmpua4wc6yzsxpljz3",
                          "nullable": true
                        },
                        "script_hash": {
                          "type": "string",
                          "description": "Hash of a script",
                          "example": "d8480dc869b94b80e81ec91b0abe307279311fe0e7001a9488f61ff8"
                        },
                        "bytecode": {
                          "type": "string",
                          "description": "CBOR-encoded Plutus script data",
                          "example": ""
                        },
                        "size": {
                          "type": "integer",
                          "description": "The size of the CBOR serialised script (in bytes)",
                          "example": 234895
                        },
                        "valid_contract": {
                          "type": "boolean",
                          "description": "True if the contract is valid or there is no contract",
                          "example": true
                        },
                        "input": {
                          "type": "object",
                          "properties": {
                            "redeemer": {
                              "type": "object",
                              "properties": {
                                "purpose": {
                                  "type": "string",
                                  "description": "What kind of validation this redeemer is used for",
                                  "enum": [
                                    "spend",
                                    "mint",
                                    "cert",
                                    "reward"
                                  ],
                                  "example": "spend"
                                },
                                "fee": {
                                  "type": "string",
                                  "description": "The budget in fees to run a script - the fees depend on the ExUnits and the current prices",
                                  "example": 45282
                                },
                                "unit": {
                                  "type": "object",
                                  "properties": {
                                    "steps": {
                                      "description": "The budget in Cpu steps to run a script",
                                      "example": 211535239,
                                      "nullable": true,
                                      "additionalProperties": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      }
                                    },
                                    "mem": {
                                      "description": "The budget in Memory to run a script",
                                      "example": 520448,
                                      "nullable": true,
                                      "additionalProperties": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "datum": {
                                  "type": "object",
                                  "properties": {
                                    "hash": {
                                      "type": "string",
                                      "description": "The Hash of the Plutus Data",
                                      "nullable": true,
                                      "example": "5a595ce795815e81d22a1a522cf3987d546dc5bb016de61b002edd63a5413ec4"
                                    },
                                    "value": {
                                      "type": "object",
                                      "description": "The actual data in json format",
                                      "example": {
                                        "bytes": "3c33"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "datum": {
                              "type": "object",
                              "properties": {
                                "hash": {
                                  "type": "string",
                                  "description": "The Hash of the Plutus Data",
                                  "nullable": true,
                                  "example": "5a595ce795815e81d22a1a522cf3987d546dc5bb016de61b002edd63a5413ec4"
                                },
                                "value": {
                                  "type": "object",
                                  "description": "The actual data in json format",
                                  "example": {
                                    "bytes": "3c33"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Transaction Information",
    "description": "Get detailed information about transaction(s)",
    "path": "/tx_info",
    "method": "post"
  },
  {
    "tags": [
      "Transactions"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_tx_hashes"
            ],
            "type": "object",
            "properties": {
              "_tx_hashes": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano Transaction hashes"
              }
            },
            "example": {
              "_tx_hashes": [
                "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e",
                "0b8ba3bed976fa4913f19adc9f6dd9063138db5b4dd29cecde369456b5155e94"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of inputs and outputs for given transaction(s)",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "tx_hash": {
                    "type": "string",
                    "description": "Hash identifier of the transaction",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "inputs": {
                    "type": "array",
                    "description": "An array of UTxO inputs used by the transaction",
                    "items": {
                      "type": "object",
                      "properties": {
                        "payment_addr": {
                          "type": "object",
                          "properties": {
                            "bech32": {
                              "type": "string",
                              "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned",
                              "example": "addr1q80rc8zj06yzdwwdyqc03rm4l3zv6n89rxuaak0t099n09yssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqad9mkw"
                            },
                            "cred": {
                              "type": "string",
                              "description": "Payment credential",
                              "example": "de3c1c527e8826b9cd2030f88f75fc44cd4ce519b9ded9eb794b3794"
                            }
                          }
                        },
                        "stake_addr": {
                          "nullable": true,
                          "allOf": [
                            {
                              "type": "string",
                              "description": "Cardano staking address (reward account) in bech32 format",
                              "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                            }
                          ]
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "Hash of transaction for UTxO",
                          "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                        },
                        "tx_index": {
                          "type": "integer",
                          "description": "Index of UTxO in the transaction",
                          "example": 0
                        },
                        "value": {
                          "type": "string",
                          "description": "Total sum of ADA on the UTxO",
                          "example": 157832856
                        }
                      }
                    }
                  },
                  "outputs": {
                    "description": "An array of UTxO outputs created by the transaction",
                    "allOf": [
                      {
                        "type": "array",
                        "description": "An array of UTxO inputs used by the transaction",
                        "items": {
                          "type": "object",
                          "properties": {
                            "payment_addr": {
                              "type": "object",
                              "properties": {
                                "bech32": {
                                  "type": "string",
                                  "description": "A Cardano payment/base address (bech32 encoded) where funds were sent or change to be returned",
                                  "example": "addr1q80rc8zj06yzdwwdyqc03rm4l3zv6n89rxuaak0t099n09yssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqad9mkw"
                                },
                                "cred": {
                                  "type": "string",
                                  "description": "Payment credential",
                                  "example": "de3c1c527e8826b9cd2030f88f75fc44cd4ce519b9ded9eb794b3794"
                                }
                              }
                            },
                            "stake_addr": {
                              "nullable": true,
                              "allOf": [
                                {
                                  "type": "string",
                                  "description": "Cardano staking address (reward account) in bech32 format",
                                  "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                                }
                              ]
                            },
                            "tx_hash": {
                              "type": "string",
                              "description": "Hash of transaction for UTxO",
                              "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                            },
                            "tx_index": {
                              "type": "integer",
                              "description": "Index of UTxO in the transaction",
                              "example": 0
                            },
                            "value": {
                              "type": "string",
                              "description": "Total sum of ADA on the UTxO",
                              "example": 157832856
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Transaction UTxOs",
    "description": "Get UTxO set (inputs/outputs) of transactions.",
    "path": "/tx_utxos",
    "method": "post"
  },
  {
    "tags": [
      "Transactions"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_tx_hashes"
            ],
            "type": "object",
            "properties": {
              "_tx_hashes": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano Transaction hashes"
              }
            },
            "example": {
              "_tx_hashes": [
                "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e",
                "0b8ba3bed976fa4913f19adc9f6dd9063138db5b4dd29cecde369456b5155e94"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of metadata information present in each of the transactions queried",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "properties": {
                  "tx_hash": {
                    "type": "string",
                    "description": "Hash identifier of the transaction",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "metadata": {
                    "type": "object",
                    "nullable": true,
                    "description": "A JSON array containing details about metadata within transaction",
                    "example": {
                      "721": {
                        "version": 1,
                        "copyright": "...",
                        "publisher": [
                          "p...o"
                        ],
                        "4bf184e01e0f163296ab253edd60774e2d34367d0e7b6cbc689b567d": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Transaction Metadata",
    "description": "Get metadata information (if any) for given transaction(s)",
    "path": "/tx_metadata",
    "method": "post"
  },
  {
    "tags": [
      "Transactions"
    ],
    "responses": {
      "200": {
        "description": "Array of known metadata labels",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "A distinct known metalabel",
                    "example": "721"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Transaction Metadata Labels",
    "description": "Get a list of all transaction metalabels",
    "path": "/tx_metalabels",
    "method": "get"
  },
  {
    "tags": [
      "Transactions"
    ],
    "requestBody": {
      "content": {
        "application/cbor": {
          "schema": {
            "type": "string",
            "format": "binary",
            "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
          }
        }
      }
    },
    "x-code-samples": [
      {
        "lang": "Shell",
        "source": "# Assuming ${data} is a raw binary serialized transaction on the file-system.\n# If using a CLI-generated tx file, please ensure to deserialise (using `xxd -p -r <<< $(jq .cborHex ${tx.signed}) > ${data}`) first before submitting.\ncurl -X POST \\\n    --header \"Content-Type: application/cbor\" \\\n    --data-binary ${data} https://api.koios.rest/api/v0/submittx\n"
      }
    ],
    "responses": {
      "202": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "description": "The transaction id.",
              "type": "string",
              "format": "hex",
              "minLength": 64,
              "maxLength": 64,
              "example": "92bcd06b25dfbd89b578d536b4d3b7dd269b7c2aa206ed518012cffe0444d67f"
            }
          }
        }
      },
      "400": {
        "description": "An error occured while submitting transaction."
      }
    },
    "summary": "Submit Transaction",
    "description": "Submit an already serialized transaction to the network.",
    "path": "/submittx",
    "method": "post"
  },
  {
    "tags": [
      "Transactions"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_tx_hashes"
            ],
            "type": "object",
            "properties": {
              "_tx_hashes": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano Transaction hashes"
              }
            },
            "example": {
              "_tx_hashes": [
                "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e",
                "0b8ba3bed976fa4913f19adc9f6dd9063138db5b4dd29cecde369456b5155e94"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of transaction confirmation counts",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "tx_hash": {
                    "type": "string",
                    "description": "Hash identifier of the transaction",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "num_confirmations": {
                    "type": "integer",
                    "description": "Number of block confirmations",
                    "example": 17,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Transaction Status (Block Confirmations)",
    "description": "Get the number of block confirmations for a given transaction hash list",
    "path": "/tx_status",
    "method": "post"
  },
  {
    "tags": [
      "Address"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_addresses"
            ],
            "type": "object",
            "properties": {
              "_addresses": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano payment address(es) in bech32 format"
              }
            },
            "example": {
              "_addresses": [
                "addr1qy2jt0qpqz2z2z9zx5w4xemekkce7yderz53kjue53lpqv90lkfa9sgrfjuz6uvt4uqtrqhl2kj0a9lnr9ndzutx32gqleeckv",
                "addr1q9xvgr4ehvu5k5tmaly7ugpnvekpqvnxj8xy50pa7kyetlnhel389pa4rnq6fmkzwsaynmw0mnldhlmchn2sfd589fgsz9dd0y"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of address information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "A Cardano payment/base address (bech32 encoded) for transaction's input UTxO",
                    "example": "addr1qxkfe8s6m8qt5436lec3f0320hrmpppwqgs2gah4360krvyssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqdc3cxp"
                  },
                  "balance": {
                    "type": "string",
                    "description": "Sum of all UTxO values beloning to address",
                    "example": 10723473983
                  },
                  "stake_address": {
                    "nullable": true,
                    "allOf": [
                      {
                        "type": "string",
                        "description": "Cardano staking address (reward account) in bech32 format",
                        "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                      }
                    ]
                  },
                  "script_address": {
                    "type": "boolean",
                    "description": "Signifies whether the address is a script address",
                    "example": true
                  },
                  "utxo_set": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "tx_hash": {
                          "type": "string",
                          "description": "Hash of transaction for UTxO",
                          "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                        },
                        "tx_index": {
                          "type": "integer",
                          "description": "Index of UTxO in the transaction",
                          "example": 0
                        },
                        "block_height": {
                          "type": "integer",
                          "description": "Block height",
                          "nullable": true,
                          "example": 42325043
                        },
                        "block_time": {
                          "type": "integer",
                          "description": "UNIX timestamp of the block",
                          "example": 1506635091
                        },
                        "value": {
                          "type": "string",
                          "description": "Total sum of ADA on the UTxO",
                          "example": 157832856
                        },
                        "datum_hash": {
                          "type": "string",
                          "description": "The Hash of the Plutus Data",
                          "nullable": true,
                          "example": "5a595ce795815e81d22a1a522cf3987d546dc5bb016de61b002edd63a5413ec4"
                        },
                        "inline_datum": {
                          "type": "object",
                          "nullable": true,
                          "description": "Allows datums to be attached to UTxO (CIP-32)",
                          "properties": {
                            "bytes": {
                              "type": "string",
                              "description": "Datum bytes (hex)",
                              "example": "19029a"
                            },
                            "value": {
                              "type": "object",
                              "description": "Value (json)",
                              "example": {
                                "int": 666
                              }
                            }
                          }
                        },
                        "reference_script": {
                          "type": "object",
                          "nullable": true,
                          "description": "Allow reference scripts to be used to satisfy script requirements during validation, rather than requiring the spending transaction to do so. (CIP-33)",
                          "properties": {
                            "hash": {
                              "type": "string",
                              "description": "Hash of referenced script",
                              "example": "67f33146617a5e61936081db3b2117cbf59bd2123748f58ac9678656"
                            },
                            "size": {
                              "type": "integer",
                              "description": "Size in bytes",
                              "example": 14
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of script",
                              "example": "plutusV1"
                            },
                            "bytes": {
                              "type": "string",
                              "description": "Script bytes (hex)",
                              "example": "4e4d01000033222220051200120011"
                            },
                            "value": {
                              "type": "object",
                              "nullable": true,
                              "description": "Value (json)",
                              "example": null
                            }
                          }
                        },
                        "asset_list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "policy_id": {
                                "type": "string",
                                "description": "Asset Policy ID (hex)",
                                "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                              },
                              "asset_name": {
                                "type": "string",
                                "nullable": true,
                                "description": "Asset Name (hex)",
                                "example": "444f4e545350414d"
                              },
                              "fingerprint": {
                                "type": "string",
                                "description": "The CIP14 fingerprint of the asset",
                                "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                              },
                              "decimals": {
                                "type": "integer",
                                "description": "Asset decimals",
                                "example": 6
                              },
                              "quantity": {
                                "type": "string",
                                "description": "Asset quantity owned by account",
                                "example": 990000
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Address Information",
    "description": "Get address info - balance, associated stake address (if any) and UTxO set for given addresses",
    "path": "/address_info",
    "method": "post"
  },
  {
    "tags": [
      "Address"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_addresses"
            ],
            "type": "object",
            "properties": {
              "_addresses": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano payment address(es) in bech32 format"
              },
              "_after_block_height": {
                "format": "integer",
                "type": "integer",
                "description": "Only fetch information after specific block height"
              }
            },
            "example": {
              "_addresses": [
                "addr1qy2jt0qpqz2z2z9zx5w4xemekkce7yderz53kjue53lpqv90lkfa9sgrfjuz6uvt4uqtrqhl2kj0a9lnr9ndzutx32gqleeckv",
                "addr1q9xvgr4ehvu5k5tmaly7ugpnvekpqvnxj8xy50pa7kyetlnhel389pa4rnq6fmkzwsaynmw0mnldhlmchn2sfd589fgsz9dd0y"
              ],
              "_after_block_height": 6238675
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of transaction hashes",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "tx_hash": {
                    "type": "string",
                    "description": "Hash identifier of the transaction",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number of the block",
                    "example": 321
                  },
                  "block_height": {
                    "type": "integer",
                    "description": "Block height",
                    "nullable": true,
                    "example": 42325043
                  },
                  "block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the block",
                    "example": 1506635091
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Address Transactions",
    "description": "Get the transaction hash list of input address array, optionally filtering after specified block height (inclusive)",
    "path": "/address_txs",
    "method": "post"
  },
  {
    "tags": [
      "Address"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_payment_credentials"
            ],
            "type": "object",
            "properties": {
              "_payment_credentials": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano payment credential(s) in hex format"
              }
            },
            "example": {
              "_payment_credentials": [
                "025b0a8f85cb8a46e1dda3fae5d22f07e2d56abb4019a2129c5d6c52",
                "13f6870c5e4f3b242463e4dc1f2f56b02a032d3797d933816f15e555"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of UTxOs with balances",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "tx_hash": {
                    "type": "string",
                    "description": "Hash of transaction for UTxO",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "tx_index": {
                    "type": "integer",
                    "description": "Index of UTxO in the transaction",
                    "example": 0
                  },
                  "value": {
                    "type": "string",
                    "description": "Total sum of ADA on the UTxO",
                    "example": 157832856
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "UTxOs from payment credentials",
    "description": "Get a list of UTxO against input payment credential array including their balances",
    "path": "/credential_utxos",
    "method": "post"
  },
  {
    "tags": [
      "Address"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_addresses"
            ],
            "type": "object",
            "properties": {
              "_addresses": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano payment address(es) in bech32 format"
              }
            },
            "example": {
              "_addresses": [
                "addr1qy2jt0qpqz2z2z9zx5w4xemekkce7yderz53kjue53lpqv90lkfa9sgrfjuz6uvt4uqtrqhl2kj0a9lnr9ndzutx32gqleeckv",
                "addr1q9xvgr4ehvu5k5tmaly7ugpnvekpqvnxj8xy50pa7kyetlnhel389pa4rnq6fmkzwsaynmw0mnldhlmchn2sfd589fgsz9dd0y"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of address-owned assets",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "A Cardano payment/base address (bech32 encoded) for transaction's input UTxO",
                    "example": "addr1qxkfe8s6m8qt5436lec3f0320hrmpppwqgs2gah4360krvyssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqdc3cxp"
                  },
                  "asset_list": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "policy_id": {
                          "type": "string",
                          "description": "Asset Policy ID (hex)",
                          "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                        },
                        "asset_name": {
                          "type": "string",
                          "nullable": true,
                          "description": "Asset Name (hex)",
                          "example": "444f4e545350414d"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "The CIP14 fingerprint of the asset",
                          "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                        },
                        "decimals": {
                          "type": "integer",
                          "description": "Asset decimals",
                          "example": 6
                        },
                        "quantity": {
                          "type": "string",
                          "description": "Asset quantity owned by account",
                          "example": 990000
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Address Assets",
    "description": "Get the list of all the assets (policy, name and quantity) for given addresses",
    "path": "/address_assets",
    "method": "post"
  },
  {
    "tags": [
      "Address"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_payment_credentials"
            ],
            "type": "object",
            "properties": {
              "_payment_credentials": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano payment credential(s) in hex format"
              },
              "_after_block_height": {
                "format": "integer",
                "type": "integer",
                "description": "Only fetch information after specific block height"
              }
            },
            "example": {
              "_payment_credentials": [
                "025b0a8f85cb8a46e1dda3fae5d22f07e2d56abb4019a2129c5d6c52",
                "13f6870c5e4f3b242463e4dc1f2f56b02a032d3797d933816f15e555"
              ],
              "_after_block_height": 6238675
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of transaction hashes",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "tx_hash": {
                    "type": "string",
                    "description": "Hash identifier of the transaction",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number of the block",
                    "example": 321
                  },
                  "block_height": {
                    "type": "integer",
                    "description": "Block height",
                    "nullable": true,
                    "example": 42325043
                  },
                  "block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the block",
                    "example": 1506635091
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Transactions from payment credentials",
    "description": "Get the transaction hash list of input payment credential array, optionally filtering after specified block height (inclusive)",
    "path": "/credential_txs",
    "method": "post"
  },
  {
    "tags": [
      "Stake Account"
    ],
    "responses": {
      "200": {
        "description": "Array of account (stake address) IDs",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Cardano staking address (reward account) in bech32 format",
                    "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Account List",
    "description": "Get a list of all stake addresses that have atleast 1 transaction",
    "path": "/account_list",
    "method": "get"
  },
  {
    "tags": [
      "Stake Account"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_stake_addresses"
            ],
            "type": "object",
            "properties": {
              "_stake_addresses": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano stake address(es) in bech32 format"
              }
            },
            "example": {
              "_stake_addresses": [
                "stake1uyrx65wjqjgeeksd8hptmcgl5jfyrqkfq0xe8xlp367kphsckq250",
                "stake1uxpdrerp9wrxunfh6ukyv5267j70fzxgw0fr3z8zeac5vyqhf9jhy"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of account information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "stake_address": {
                    "type": "string",
                    "description": "Cardano staking address (reward account) in bech32 format",
                    "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                  },
                  "status": {
                    "type": "string",
                    "description": "Stake address status",
                    "enum": [
                      "registered",
                      "not registered"
                    ],
                    "example": "registered"
                  },
                  "delegated_pool": {
                    "type": "string",
                    "nullable": true,
                    "description": "Bech32 representation of pool ID",
                    "example": "pool1z5uqdk7dzdxaae5633fqfcu2eqzy3a3rgtuvy087fdld7yws0xt"
                  },
                  "total_balance": {
                    "type": "string",
                    "description": "Total balance of the account including UTxO, rewards and MIRs (in lovelace)",
                    "example": 207116800428
                  },
                  "utxo": {
                    "type": "string",
                    "description": "Total UTxO balance of the account",
                    "example": 162764177131
                  },
                  "rewards": {
                    "type": "string",
                    "description": "Total rewards earned by the account",
                    "example": 56457728047
                  },
                  "withdrawals": {
                    "type": "string",
                    "description": "Total rewards withdrawn by the account",
                    "example": 12105104750
                  },
                  "rewards_available": {
                    "type": "string",
                    "description": "Total rewards available for withdawal",
                    "example": 44352623297
                  },
                  "reserves": {
                    "type": "string",
                    "description": "Total reserves MIR value of the account",
                    "example": "0"
                  },
                  "treasury": {
                    "type": "string",
                    "description": "Total treasury MIR value of the account",
                    "example": "0"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Account Information",
    "description": "Get the account information for given stake addresses",
    "path": "/account_info",
    "method": "post"
  },
  {
    "tags": [
      "Stake Account"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_stake_address",
        "description": "Cardano staking address (reward account) in bech32 format",
        "schema": {
          "type": "string",
          "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      }
    ],
    "responses": {
      "200": {
        "description": "Array of account UTxOs associated with stake address",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "tx_hash": {
                    "type": "string",
                    "description": "Hash of transaction for UTxO",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "tx_index": {
                    "type": "integer",
                    "description": "Index of UTxO in the transaction",
                    "example": 0
                  },
                  "address": {
                    "type": "string",
                    "description": "A Cardano payment/base address (bech32 encoded) for transaction's input UTxO",
                    "example": "addr1qxkfe8s6m8qt5436lec3f0320hrmpppwqgs2gah4360krvyssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqdc3cxp"
                  },
                  "value": {
                    "type": "string",
                    "description": "Total sum of ADA on the UTxO",
                    "example": 157832856
                  },
                  "block_height": {
                    "type": "integer",
                    "description": "Block height",
                    "nullable": true,
                    "example": 42325043
                  },
                  "block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the block",
                    "example": 1506635091
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Account UTxOs",
    "description": "Get a list of all UTxOs for a given stake address (account)",
    "path": "/account_utxos",
    "method": "get"
  },
  {
    "tags": [
      "Stake Account"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_stake_addresses"
            ],
            "type": "object",
            "properties": {
              "_stake_addresses": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano stake address(es) in bech32 format"
              }
            },
            "example": {
              "_stake_addresses": [
                "stake1uyrx65wjqjgeeksd8hptmcgl5jfyrqkfq0xe8xlp367kphsckq250",
                "stake1uxpdrerp9wrxunfh6ukyv5267j70fzxgw0fr3z8zeac5vyqhf9jhy"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of account information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "stake_address": {
                    "type": "string",
                    "description": "Cardano staking address (reward account) in bech32 format",
                    "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                  },
                  "status": {
                    "type": "string",
                    "description": "Stake address status",
                    "enum": [
                      "registered",
                      "not registered"
                    ],
                    "example": "registered"
                  },
                  "delegated_pool": {
                    "type": "string",
                    "nullable": true,
                    "description": "Bech32 representation of pool ID",
                    "example": "pool1z5uqdk7dzdxaae5633fqfcu2eqzy3a3rgtuvy087fdld7yws0xt"
                  },
                  "total_balance": {
                    "type": "string",
                    "description": "Total balance of the account including UTxO, rewards and MIRs (in lovelace)",
                    "example": 207116800428
                  },
                  "utxo": {
                    "type": "string",
                    "description": "Total UTxO balance of the account",
                    "example": 162764177131
                  },
                  "rewards": {
                    "type": "string",
                    "description": "Total rewards earned by the account",
                    "example": 56457728047
                  },
                  "withdrawals": {
                    "type": "string",
                    "description": "Total rewards withdrawn by the account",
                    "example": 12105104750
                  },
                  "rewards_available": {
                    "type": "string",
                    "description": "Total rewards available for withdawal",
                    "example": 44352623297
                  },
                  "reserves": {
                    "type": "string",
                    "description": "Total reserves MIR value of the account",
                    "example": "0"
                  },
                  "treasury": {
                    "type": "string",
                    "description": "Total treasury MIR value of the account",
                    "example": "0"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Account Information (Cached)",
    "description": "Get the cached account information for given stake addresses, effective for registered accounts",
    "path": "/account_info_cached",
    "method": "post"
  },
  {
    "tags": [
      "Stake Account"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_stake_addresses"
            ],
            "type": "object",
            "properties": {
              "_stake_addresses": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano stake address(es) in bech32 format"
              },
              "_epoch_no": {
                "format": "integer",
                "type": "integer",
                "description": "Only fetch information for a specific epoch"
              }
            },
            "example": {
              "_stake_addresses": [
                "stake1uyrx65wjqjgeeksd8hptmcgl5jfyrqkfq0xe8xlp367kphsckq250",
                "stake1uxpdrerp9wrxunfh6ukyv5267j70fzxgw0fr3z8zeac5vyqhf9jhy"
              ],
              "_epoch_no": 350
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of reward history information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "stake_address": {
                    "type": "string",
                    "description": "Cardano staking address (reward account) in bech32 format",
                    "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                  },
                  "rewards": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "earned_epoch": {
                          "type": "integer",
                          "description": "Epoch number",
                          "example": 294
                        },
                        "spendable_epoch": {
                          "type": "integer",
                          "description": "Epoch number",
                          "example": 294
                        },
                        "amount": {
                          "type": "string",
                          "description": "Amount of rewards earned (in lovelace)"
                        },
                        "type": {
                          "type": "string",
                          "description": "The source of the rewards",
                          "enum": [
                            "member",
                            "leader",
                            "treasury",
                            "reserves"
                          ],
                          "example": "member"
                        },
                        "pool_id": {
                          "type": "string",
                          "nullable": true,
                          "description": "Bech32 representation of pool ID",
                          "example": "pool1z5uqdk7dzdxaae5633fqfcu2eqzy3a3rgtuvy087fdld7yws0xt"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Account Rewards",
    "description": "Get the full rewards history (including MIR) for given stake addresses",
    "path": "/account_rewards",
    "method": "post"
  },
  {
    "tags": [
      "Stake Account"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_stake_addresses"
            ],
            "type": "object",
            "properties": {
              "_stake_addresses": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano stake address(es) in bech32 format"
              }
            },
            "example": {
              "_stake_addresses": [
                "stake1uyrx65wjqjgeeksd8hptmcgl5jfyrqkfq0xe8xlp367kphsckq250",
                "stake1uxpdrerp9wrxunfh6ukyv5267j70fzxgw0fr3z8zeac5vyqhf9jhy"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of account updates information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "stake_address": {
                    "type": "string",
                    "description": "Cardano staking address (reward account) in bech32 format",
                    "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                  },
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action_type": {
                          "type": "string",
                          "description": "Type of certificate submitted",
                          "enum": [
                            "registration",
                            "delegation",
                            "withdrawal",
                            "deregistration"
                          ],
                          "example": "registration"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "Hash identifier of the transaction",
                          "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                        },
                        "epoch_no": {
                          "type": "integer",
                          "description": "Epoch number of the block",
                          "example": 321
                        },
                        "epoch_slot": {
                          "type": "integer",
                          "description": "Slot number of the block in epoch",
                          "example": 75442
                        },
                        "absolute_slot": {
                          "type": "integer",
                          "description": "Absolute slot number of the block",
                          "example": 53384242
                        },
                        "block_time": {
                          "type": "integer",
                          "description": "UNIX timestamp of the block",
                          "example": 1506635091
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Account Updates",
    "description": "Get the account updates (registration, deregistration, delegation and withdrawals) for given stake addresses",
    "path": "/account_updates",
    "method": "post"
  },
  {
    "tags": [
      "Stake Account"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_stake_addresses"
            ],
            "type": "object",
            "properties": {
              "_stake_addresses": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano stake address(es) in bech32 format"
              },
              "_first_only": {
                "format": "boolean",
                "type": "boolean",
                "description": "Only return the first result"
              },
              "_empty": {
                "format": "boolean",
                "type": "boolean",
                "description": "Include zero quantity entries"
              }
            },
            "example": {
              "_stake_addresses": [
                "stake1uyrx65wjqjgeeksd8hptmcgl5jfyrqkfq0xe8xlp367kphsckq250",
                "stake1uxpdrerp9wrxunfh6ukyv5267j70fzxgw0fr3z8zeac5vyqhf9jhy"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of payment addresses",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "stake_address": {
                    "type": "string",
                    "description": "Cardano staking address (reward account) in bech32 format",
                    "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                  },
                  "addresses": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A Cardano payment/base address (bech32 encoded) for transaction's input UTxO",
                      "example": "addr1qxkfe8s6m8qt5436lec3f0320hrmpppwqgs2gah4360krvyssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqdc3cxp"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Account Addresses",
    "description": "Get all addresses associated with given staking accounts",
    "path": "/account_addresses",
    "method": "post"
  },
  {
    "tags": [
      "Stake Account"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_stake_addresses"
            ],
            "type": "object",
            "properties": {
              "_stake_addresses": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano stake address(es) in bech32 format"
              }
            },
            "example": {
              "_stake_addresses": [
                "stake1uyrx65wjqjgeeksd8hptmcgl5jfyrqkfq0xe8xlp367kphsckq250",
                "stake1uxpdrerp9wrxunfh6ukyv5267j70fzxgw0fr3z8zeac5vyqhf9jhy"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of assets owned by account",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "stake_address": {
                    "type": "string",
                    "description": "Cardano staking address (reward account) in bech32 format",
                    "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                  },
                  "asset_list": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "policy_id": {
                          "type": "string",
                          "description": "Asset Policy ID (hex)",
                          "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                        },
                        "asset_name": {
                          "type": "string",
                          "nullable": true,
                          "description": "Asset Name (hex)",
                          "example": "444f4e545350414d"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "The CIP14 fingerprint of the asset",
                          "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                        },
                        "decimals": {
                          "type": "integer",
                          "description": "Asset decimals",
                          "example": 6
                        },
                        "quantity": {
                          "type": "string",
                          "description": "Asset quantity owned by account",
                          "example": 990000
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Account Assets",
    "description": "Get the native asset balance for a given stake address",
    "path": "/account_assets",
    "method": "post"
  },
  {
    "tags": [
      "Stake Account"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_stake_addresses"
            ],
            "type": "object",
            "properties": {
              "_stake_addresses": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano stake address(es) in bech32 format"
              },
              "_epoch_no": {
                "format": "integer",
                "type": "integer",
                "description": "Only fetch information for a specific epoch"
              }
            },
            "example": {
              "_stake_addresses": [
                "stake1uyrx65wjqjgeeksd8hptmcgl5jfyrqkfq0xe8xlp367kphsckq250",
                "stake1uxpdrerp9wrxunfh6ukyv5267j70fzxgw0fr3z8zeac5vyqhf9jhy"
              ],
              "_epoch_no": 350
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of active stake values per epoch",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "stake_address": {
                    "type": "string",
                    "description": "Cardano staking address (reward account) in bech32 format",
                    "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                  },
                  "history": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "pool_id": {
                          "type": "string",
                          "description": "Bech32 representation of pool ID",
                          "example": "pool1z5uqdk7dzdxaae5633fqfcu2eqzy3a3rgtuvy087fdld7yws0xt"
                        },
                        "epoch_no": {
                          "type": "integer",
                          "description": "Epoch number",
                          "example": 301
                        },
                        "active_stake": {
                          "type": "string",
                          "description": "Active stake amount (in lovelaces)",
                          "example": 682334162
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Account History",
    "description": "Get the staking history of given stake addresses (accounts)",
    "path": "/account_history",
    "method": "post"
  },
  {
    "tags": [
      "Asset"
    ],
    "responses": {
      "200": {
        "description": "Array of policy IDs and asset names",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "Array of policy IDs and asset names",
              "items": {
                "type": "object",
                "properties": {
                  "policy_id": {
                    "type": "string",
                    "description": "Asset Policy ID (hex)",
                    "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                  },
                  "asset_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Asset Name (hex)",
                    "example": "444f4e545350414d"
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "The CIP14 fingerprint of the asset",
                    "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Asset List",
    "description": "Get the list of all native assets (paginated)",
    "path": "/asset_list",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "responses": {
      "200": {
        "description": "Array of token registry information for each asset",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "An array of token registry information (registered via github) for each asset",
              "items": {
                "type": "object",
                "properties": {
                  "policy_id": {
                    "type": "string",
                    "description": "Asset Policy ID (hex)",
                    "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                  },
                  "asset_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Asset Name (hex)",
                    "example": "444f4e545350414d"
                  },
                  "asset_name_ascii": {
                    "type": "string",
                    "description": "Asset Name (ASCII)",
                    "example": "DONTSPAM"
                  },
                  "ticker": {
                    "type": "string",
                    "example": "MOB"
                  },
                  "description": {
                    "type": "string",
                    "example": "Metaverse Blockchain Cryptocurrency."
                  },
                  "url": {
                    "type": "string",
                    "example": "https://www.rackmob.com/"
                  },
                  "decimals": {
                    "type": "integer",
                    "example": 0
                  },
                  "logo": {
                    "type": "string",
                    "description": "A PNG image file as a byte string",
                    "example": "iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAACXBIWXMAAA7EAAAOxAGVKw4bAAADnmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQnPz4KPHg6eG1wbWV0YSB4bWxuczp4PSdhZG9iZTpuczptZXRhLyc"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Asset Token Registry",
    "description": "Get a list of assets registered via token registry on github",
    "path": "/asset_token_registry",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_asset_policy",
        "description": "Asset Policy ID in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "750900e4999ebe0d58f19b634768ba25e525aaf12403bfe8fe130501"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      },
      {
        "deprecated": false,
        "name": "_asset_name",
        "description": "Asset Name in hexadecimal format (hex), empty asset name returns royalties",
        "schema": {
          "type": "string",
          "example": "424f4f4b"
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of payment addresses holding the given token (including balances)",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "An array of payment addresses holding the given token (including balances)",
              "items": {
                "properties": {
                  "payment_address": {
                    "type": "string",
                    "description": "A Cardano payment/base address (bech32 encoded) for transaction's input UTxO",
                    "example": "addr1qxkfe8s6m8qt5436lec3f0320hrmpppwqgs2gah4360krvyssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqdc3cxp"
                  },
                  "quantity": {
                    "type": "string",
                    "description": "Asset balance on the payment address",
                    "example": 23
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Asset Addresses",
    "description": "Get the list of all addresses holding a given asset <br><br> `Note - Due to cardano's UTxO design and usage from projects, asset to addresses map can be infinite. Thus, for a small subset of active projects with millions of transactions, these might end up with timeouts (HTTP code 504) on free layer. Such large-scale projects are free to subscribe to query layers to have a dedicated cache table for themselves served via Koios.`",
    "path": "/asset_addresses",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_asset_policy",
        "description": "Asset Policy ID in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "750900e4999ebe0d58f19b634768ba25e525aaf12403bfe8fe130501"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      },
      {
        "deprecated": false,
        "name": "_asset_name",
        "description": "Asset Name in hexadecimal format (hex), empty asset name returns royalties",
        "schema": {
          "type": "string",
          "example": "424f4f4b"
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of payment addresses holding the given token (including balances)",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "An array of payment addresses holding the given token (including balances)",
              "items": {
                "properties": {
                  "payment_address": {
                    "type": "string",
                    "description": "A Cardano payment/base address (bech32 encoded) for transaction's input UTxO",
                    "example": "addr1qxkfe8s6m8qt5436lec3f0320hrmpppwqgs2gah4360krvyssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqdc3cxp"
                  },
                  "quantity": {
                    "type": "string",
                    "description": "Asset balance on the payment address",
                    "example": 23
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Asset Address List [DEPRECATED]",
    "description": "Get the list of all addresses holding a given asset (replaced by asset_addresses)",
    "path": "/asset_address_list",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_asset_policy",
        "description": "NFT Policy ID in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "f0ff48bbb7bbe9d59a40f1ce90e9e9d0ff5002ec48f232b49ca0fb9a"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      },
      {
        "deprecated": false,
        "name": "_asset_name",
        "description": "NFT Name in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "68616e646c65"
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Payment addresses currently holding the given NFT",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "An array of payment addresses holding the given token",
              "items": {
                "properties": {
                  "payment_address": {
                    "type": "string",
                    "description": "A Cardano payment/base address (bech32 encoded) for transaction's input UTxO",
                    "example": "addr1qxkfe8s6m8qt5436lec3f0320hrmpppwqgs2gah4360krvyssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqdc3cxp"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "NFT Address",
    "description": "Get the address where specified NFT currently reside on.",
    "path": "/asset_nft_address",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_asset_policy",
        "description": "Asset Policy ID in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "750900e4999ebe0d58f19b634768ba25e525aaf12403bfe8fe130501"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      },
      {
        "deprecated": false,
        "name": "_asset_name",
        "description": "Asset Name in hexadecimal format (hex), empty asset name returns royalties",
        "schema": {
          "type": "string",
          "example": "424f4f4b"
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of detailed asset information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "policy_id": {
                    "type": "string",
                    "description": "Asset Policy ID (hex)",
                    "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                  },
                  "asset_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Asset Name (hex)",
                    "example": "444f4e545350414d"
                  },
                  "asset_name_ascii": {
                    "type": "string",
                    "description": "Asset Name (ASCII)",
                    "example": "DONTSPAM"
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "The CIP14 fingerprint of the asset",
                    "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                  },
                  "minting_tx_hash": {
                    "type": "string",
                    "description": "Hash of the latest mint transaction",
                    "example": "cb07b7e51b77079776c4a78f2daf8f14f9945d2b047da7bfcb71d7fbb9f86712"
                  },
                  "total_supply": {
                    "type": "string",
                    "description": "Total supply for the asset",
                    "example": "35000"
                  },
                  "mint_cnt": {
                    "type": "integer",
                    "description": "Count of total mint transactions",
                    "example": 1
                  },
                  "burn_cnt": {
                    "type": "integer",
                    "description": "Count of total burn transactions",
                    "example": 5
                  },
                  "creation_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the first asset mint",
                    "example": 1506635091
                  },
                  "minting_tx_metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "nullable": true,
                        "description": "A JSON array containing details about metadata within transaction",
                        "example": {
                          "721": {
                            "version": 1,
                            "copyright": "...",
                            "publisher": [
                              "p...o"
                            ],
                            "4bf184e01e0f163296ab253edd60774e2d34367d0e7b6cbc689b567d": {}
                          }
                        }
                      }
                    ],
                    "description": "Latest minting transaction metadata (aligns with CIP-25)"
                  },
                  "token_registry_metadata": {
                    "type": "object",
                    "description": "Asset metadata registered on the Cardano Token Registry",
                    "nullable": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Rackmob"
                      },
                      "description": {
                        "type": "string",
                        "example": "Metaverse Blockchain Cryptocurrency."
                      },
                      "ticker": {
                        "type": "string",
                        "example": "MOB"
                      },
                      "url": {
                        "type": "string",
                        "example": "https://www.rackmob.com/"
                      },
                      "logo": {
                        "type": "string",
                        "description": "A PNG image file as a byte string",
                        "example": "iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAACXBIWXMAAA7EAAAOxAGVKw4bAAADnmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQnPz4KPHg6eG1wbWV0YSB4bWxuczp4PSdhZG9iZTpuczptZXRhLyc"
                      },
                      "decimals": {
                        "type": "integer",
                        "example": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Asset Information",
    "description": "Get the information of an asset including first minting & token registry metadata",
    "path": "/asset_info",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_asset_list"
            ],
            "type": "object",
            "properties": {
              "_asset_list": {
                "format": "text",
                "type": "array",
                "description": "Array of array of policy ID and asset names (hex)",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "example": {
              "_asset_list": [
                [
                  "750900e4999ebe0d58f19b634768ba25e525aaf12403bfe8fe130501",
                  "424f4f4b"
                ],
                [
                  "1d7f33bd23d85e1a25d87d86fac4f199c3197a2f7afeb662a0f34e1e",
                  "776f726c646d6f62696c65746f6b656e"
                ]
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of detailed asset information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "policy_id": {
                    "type": "string",
                    "description": "Asset Policy ID (hex)",
                    "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                  },
                  "asset_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Asset Name (hex)",
                    "example": "444f4e545350414d"
                  },
                  "asset_name_ascii": {
                    "type": "string",
                    "description": "Asset Name (ASCII)",
                    "example": "DONTSPAM"
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "The CIP14 fingerprint of the asset",
                    "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                  },
                  "minting_tx_hash": {
                    "type": "string",
                    "description": "Hash of the latest mint transaction",
                    "example": "cb07b7e51b77079776c4a78f2daf8f14f9945d2b047da7bfcb71d7fbb9f86712"
                  },
                  "total_supply": {
                    "type": "string",
                    "description": "Total supply for the asset",
                    "example": "35000"
                  },
                  "mint_cnt": {
                    "type": "integer",
                    "description": "Count of total mint transactions",
                    "example": 1
                  },
                  "burn_cnt": {
                    "type": "integer",
                    "description": "Count of total burn transactions",
                    "example": 5
                  },
                  "creation_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the first asset mint",
                    "example": 1506635091
                  },
                  "minting_tx_metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "nullable": true,
                        "description": "A JSON array containing details about metadata within transaction",
                        "example": {
                          "721": {
                            "version": 1,
                            "copyright": "...",
                            "publisher": [
                              "p...o"
                            ],
                            "4bf184e01e0f163296ab253edd60774e2d34367d0e7b6cbc689b567d": {}
                          }
                        }
                      }
                    ],
                    "description": "Latest minting transaction metadata (aligns with CIP-25)"
                  },
                  "token_registry_metadata": {
                    "type": "object",
                    "description": "Asset metadata registered on the Cardano Token Registry",
                    "nullable": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Rackmob"
                      },
                      "description": {
                        "type": "string",
                        "example": "Metaverse Blockchain Cryptocurrency."
                      },
                      "ticker": {
                        "type": "string",
                        "example": "MOB"
                      },
                      "url": {
                        "type": "string",
                        "example": "https://www.rackmob.com/"
                      },
                      "logo": {
                        "type": "string",
                        "description": "A PNG image file as a byte string",
                        "example": "iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAACXBIWXMAAA7EAAAOxAGVKw4bAAADnmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQnPz4KPHg6eG1wbWV0YSB4bWxuczp4PSdhZG9iZTpuczptZXRhLyc"
                      },
                      "decimals": {
                        "type": "integer",
                        "example": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Asset Information (Bulk)",
    "description": "Get the information of a list of assets including first minting & token registry metadata",
    "path": "/asset_info",
    "method": "post"
  },
  {
    "tags": [
      "Asset"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_asset_policy",
        "description": "Asset Policy ID in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "750900e4999ebe0d58f19b634768ba25e525aaf12403bfe8fe130501"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      },
      {
        "deprecated": false,
        "name": "_asset_name",
        "description": "Asset Name in hexadecimal format (hex), empty asset name returns royalties",
        "schema": {
          "type": "string",
          "example": "424f4f4b"
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of asset mint/burn history",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "policy_id": {
                    "type": "string",
                    "description": "Asset Policy ID (hex)",
                    "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                  },
                  "asset_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Asset Name (hex)",
                    "example": "444f4e545350414d"
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "The CIP14 fingerprint of the asset",
                    "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                  },
                  "minting_txs": {
                    "type": "array",
                    "description": "Array of all mint/burn transactions for an asset",
                    "nullable": true,
                    "items": {
                      "type": "object",
                      "properties": {
                        "tx_hash": {
                          "type": "string",
                          "description": "Hash of minting/burning transaction",
                          "example": "e1ecc517f95715bb87681cfde2c594dbc971739f84f8bfda16170b35d63d0ddf"
                        },
                        "block_time": {
                          "type": "integer",
                          "description": "UNIX timestamp of the block",
                          "example": 1506635091
                        },
                        "quantity": {
                          "type": "string",
                          "description": "Quantity minted/burned (negative numbers indicate burn transactions)",
                          "example": "-10"
                        },
                        "metadata": {
                          "type": "array",
                          "description": "Array of Transaction Metadata for given transaction",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "nullable": true,
                                "description": "A JSON array containing details about metadata within transaction",
                                "example": {
                                  "721": {
                                    "version": 1,
                                    "copyright": "...",
                                    "publisher": [
                                      "p...o"
                                    ],
                                    "4bf184e01e0f163296ab253edd60774e2d34367d0e7b6cbc689b567d": {}
                                  }
                                }
                              }
                            ],
                            "description": "Latest minting transaction metadata (aligns with CIP-25)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Asset History",
    "description": "Get the mint/burn history of an asset",
    "path": "/asset_history",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_asset_policy",
        "description": "Asset Policy ID in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "750900e4999ebe0d58f19b634768ba25e525aaf12403bfe8fe130501"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      }
    ],
    "responses": {
      "200": {
        "description": "Array of asset names and payment addresses for the given policy (including balances)",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "Array of asset names and payment addresses for the given policy (including balances)",
              "items": {
                "properties": {
                  "asset_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Asset Name (hex)",
                    "example": "444f4e545350414d"
                  },
                  "payment_address": {
                    "type": "string",
                    "description": "A Cardano payment/base address (bech32 encoded) for transaction's input UTxO",
                    "example": "addr1qxkfe8s6m8qt5436lec3f0320hrmpppwqgs2gah4360krvyssntpwjcz303mx3h4avg7p29l3zd8u3jyglmewds9ezrqdc3cxp"
                  },
                  "quantity": {
                    "type": "string",
                    "description": "Asset balance on the payment address",
                    "example": 23
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Policy Asset Address List",
    "description": "Get the list of addresses with quantity for each asset on the given policy <br><br> `Note - Due to cardano's UTxO design and usage from projects, asset to addresses map can be infinite. Thus, for a small subset of active projects with millions of transactions, these might end up with timeouts (HTTP code 504) on free layer. Such large-scale projects are free to subscribe to query layers to have a dedicated cache table for themselves served via Koios.`",
    "path": "/policy_asset_addresses",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_asset_policy",
        "description": "Asset Policy ID in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "750900e4999ebe0d58f19b634768ba25e525aaf12403bfe8fe130501"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      }
    ],
    "responses": {
      "200": {
        "description": "Array of detailed information of assets under the same policy",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "List of policy assets",
              "items": {
                "properties": {
                  "asset_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Asset Name (hex)",
                    "example": "444f4e545350414d"
                  },
                  "asset_name_ascii": {
                    "type": "string",
                    "description": "Asset Name (ASCII)",
                    "example": "DONTSPAM"
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "The CIP14 fingerprint of the asset",
                    "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                  },
                  "minting_tx_hash": {
                    "type": "string",
                    "description": "Hash of the latest mint transaction",
                    "example": "cb07b7e51b77079776c4a78f2daf8f14f9945d2b047da7bfcb71d7fbb9f86712"
                  },
                  "total_supply": {
                    "type": "string",
                    "description": "Total supply for the asset",
                    "example": "35000"
                  },
                  "mint_cnt": {
                    "type": "integer",
                    "description": "Count of total mint transactions",
                    "example": 1
                  },
                  "burn_cnt": {
                    "type": "integer",
                    "description": "Count of total burn transactions",
                    "example": 5
                  },
                  "creation_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the first asset mint",
                    "example": 1506635091
                  },
                  "minting_tx_metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "nullable": true,
                        "description": "A JSON array containing details about metadata within transaction",
                        "example": {
                          "721": {
                            "version": 1,
                            "copyright": "...",
                            "publisher": [
                              "p...o"
                            ],
                            "4bf184e01e0f163296ab253edd60774e2d34367d0e7b6cbc689b567d": {}
                          }
                        }
                      }
                    ],
                    "description": "Latest minting transaction metadata (aligns with CIP-25)"
                  },
                  "token_registry_metadata": {
                    "type": "object",
                    "description": "Asset metadata registered on the Cardano Token Registry",
                    "nullable": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Rackmob"
                      },
                      "description": {
                        "type": "string",
                        "example": "Metaverse Blockchain Cryptocurrency."
                      },
                      "ticker": {
                        "type": "string",
                        "example": "MOB"
                      },
                      "url": {
                        "type": "string",
                        "example": "https://www.rackmob.com/"
                      },
                      "logo": {
                        "type": "string",
                        "description": "A PNG image file as a byte string",
                        "example": "iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAACXBIWXMAAA7EAAAOxAGVKw4bAAADnmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQnPz4KPHg6eG1wbWV0YSB4bWxuczp4PSdhZG9iZTpuczptZXRhLyc"
                      },
                      "decimals": {
                        "type": "integer",
                        "example": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Policy Asset Information",
    "description": "Get the information for all assets under the same policy",
    "path": "/policy_asset_info",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_asset_policy",
        "description": "Asset Policy ID in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "750900e4999ebe0d58f19b634768ba25e525aaf12403bfe8fe130501"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      }
    ],
    "responses": {
      "200": {
        "description": "Array of detailed information of assets under the same policy",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "List of policy assets",
              "items": {
                "properties": {
                  "asset_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Asset Name (hex)",
                    "example": "444f4e545350414d"
                  },
                  "asset_name_ascii": {
                    "type": "string",
                    "description": "Asset Name (ASCII)",
                    "example": "DONTSPAM"
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "The CIP14 fingerprint of the asset",
                    "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                  },
                  "minting_tx_hash": {
                    "type": "string",
                    "description": "Hash of the latest mint transaction",
                    "example": "cb07b7e51b77079776c4a78f2daf8f14f9945d2b047da7bfcb71d7fbb9f86712"
                  },
                  "total_supply": {
                    "type": "string",
                    "description": "Total supply for the asset",
                    "example": "35000"
                  },
                  "mint_cnt": {
                    "type": "integer",
                    "description": "Count of total mint transactions",
                    "example": 1
                  },
                  "burn_cnt": {
                    "type": "integer",
                    "description": "Count of total burn transactions",
                    "example": 5
                  },
                  "creation_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the first asset mint",
                    "example": 1506635091
                  },
                  "minting_tx_metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "nullable": true,
                        "description": "A JSON array containing details about metadata within transaction",
                        "example": {
                          "721": {
                            "version": 1,
                            "copyright": "...",
                            "publisher": [
                              "p...o"
                            ],
                            "4bf184e01e0f163296ab253edd60774e2d34367d0e7b6cbc689b567d": {}
                          }
                        }
                      }
                    ],
                    "description": "Latest minting transaction metadata (aligns with CIP-25)"
                  },
                  "token_registry_metadata": {
                    "type": "object",
                    "description": "Asset metadata registered on the Cardano Token Registry",
                    "nullable": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Rackmob"
                      },
                      "description": {
                        "type": "string",
                        "example": "Metaverse Blockchain Cryptocurrency."
                      },
                      "ticker": {
                        "type": "string",
                        "example": "MOB"
                      },
                      "url": {
                        "type": "string",
                        "example": "https://www.rackmob.com/"
                      },
                      "logo": {
                        "type": "string",
                        "description": "A PNG image file as a byte string",
                        "example": "iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAACXBIWXMAAA7EAAAOxAGVKw4bAAADnmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQnPz4KPHg6eG1wbWV0YSB4bWxuczp4PSdhZG9iZTpuczptZXRhLyc"
                      },
                      "decimals": {
                        "type": "integer",
                        "example": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Asset Policy Information [DEPRECATED]",
    "description": "Get the information for all assets under the same policy (replaced by asset_addresses)",
    "path": "/asset_policy_info",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_asset_policy",
        "description": "Asset Policy ID in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "750900e4999ebe0d58f19b634768ba25e525aaf12403bfe8fe130501"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      }
    ],
    "responses": {
      "200": {
        "description": "Array of detailed information of assets under the same policy",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "List of policy assets",
              "items": {
                "properties": {
                  "asset_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Asset Name (hex)",
                    "example": "444f4e545350414d"
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "The CIP14 fingerprint of the asset",
                    "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                  },
                  "total_supply": {
                    "type": "string",
                    "description": "Total supply for the asset",
                    "example": "35000"
                  },
                  "decimals": {
                    "type": "integer",
                    "description": "Asset decimals",
                    "example": 6
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Policy Asset List",
    "description": "Get the list of asset under the given policy (including balances)",
    "path": "/policy_asset_list",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_asset_policy",
        "description": "Asset Policy ID in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "750900e4999ebe0d58f19b634768ba25e525aaf12403bfe8fe130501"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      },
      {
        "deprecated": false,
        "name": "_asset_name",
        "description": "Asset Name in hexadecimal format (hex), empty asset name returns royalties",
        "schema": {
          "type": "string",
          "example": "424f4f4b"
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of asset summary information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "policy_id": {
                    "type": "string",
                    "description": "Asset Policy ID (hex)",
                    "example": "d3501d9531fcc25e3ca4b6429318c2cc374dbdbcf5e99c1c1e5da1ff"
                  },
                  "asset_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Asset Name (hex)",
                    "example": "444f4e545350414d"
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "The CIP14 fingerprint of the asset",
                    "example": "asset1ua6pz3yd5mdka946z8jw2fld3f8d0mmxt75gv9"
                  },
                  "total_transactions": {
                    "type": "integer",
                    "description": "Total number of transactions including the given asset",
                    "example": 89416
                  },
                  "staked_wallets": {
                    "type": "integer",
                    "description": "Total number of registered wallets holding the given asset",
                    "example": 548
                  },
                  "unstaked_addresses": {
                    "type": "integer",
                    "description": "Total number of payment addresses (not belonging to registered wallets) holding the given asset",
                    "example": 245
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Asset Summary",
    "description": "Get the summary of an asset (total transactions exclude minting/total wallets include only wallets with asset balance)",
    "path": "/asset_summary",
    "method": "get"
  },
  {
    "tags": [
      "Asset"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_asset_policy",
        "description": "Asset Policy ID in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "750900e4999ebe0d58f19b634768ba25e525aaf12403bfe8fe130501"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      },
      {
        "deprecated": false,
        "name": "_asset_name",
        "description": "Asset Name in hexadecimal format (hex), empty asset name returns royalties",
        "schema": {
          "type": "string",
          "example": "424f4f4b"
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      },
      {
        "deprecated": false,
        "name": "_after_block_height",
        "description": "Block height for specifying time delta",
        "schema": {
          "type": "integer",
          "example": 50000
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      },
      {
        "deprecated": false,
        "name": "_history",
        "description": "Include all historical transactions, setting to false includes only the non-empty ones",
        "schema": {
          "type": "boolean",
          "example": "false"
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": false
      }
    ],
    "responses": {
      "200": {
        "description": "Array of Tx hashes that included the given asset",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "An array of Tx hashes that included the given asset (latest first)",
              "items": {
                "properties": {
                  "tx_hash": {
                    "type": "string",
                    "description": "Hash identifier of the transaction",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number of the block",
                    "example": 321
                  },
                  "block_height": {
                    "type": "integer",
                    "description": "Block height",
                    "nullable": true,
                    "example": 42325043
                  },
                  "block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the block",
                    "example": 1506635091
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Asset Transactions",
    "description": "Get the list of current or all asset transaction hashes (newest first)",
    "path": "/asset_txs",
    "method": "get"
  },
  {
    "tags": [
      "Pool"
    ],
    "responses": {
      "200": {
        "description": "Array of pool IDs and tickers",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "pool_id_bech32": {
                    "type": "string",
                    "nullable": true,
                    "description": "Bech32 representation of pool ID",
                    "example": "pool1z5uqdk7dzdxaae5633fqfcu2eqzy3a3rgtuvy087fdld7yws0xt"
                  },
                  "ticker": {
                    "type": "string",
                    "nullable": true,
                    "description": "Pool ticker",
                    "example": "JAZZ"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Pool List",
    "description": "A list of all currently registered/retiring (not retired) pools",
    "path": "/pool_list",
    "method": "get"
  },
  {
    "tags": [
      "Pool"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "required": [
              "_pool_bech32_ids"
            ],
            "type": "object",
            "properties": {
              "_pool_bech32_ids": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano pool IDs (bech32 format)"
              }
            },
            "example": {
              "_pool_bech32_ids": [
                "pool100wj94uzf54vup2hdzk0afng4dhjaqggt7j434mtgm8v2gfvfgp",
                "pool102s2nqtea2hf5q0s4amj0evysmfnhrn4apyyhd4azcmsclzm96m",
                "pool102vsulhfx8ua2j9fwl2u7gv57fhhutc3tp6juzaefgrn7ae35wm"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of pool information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pool_id_bech32": {
                    "type": "string",
                    "description": "Pool ID (bech32 format)",
                    "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc"
                  },
                  "pool_id_hex": {
                    "type": "string",
                    "description": "Pool ID (Hex format)",
                    "example": "a532904ca60e13e88437b58e7c6ff66b8d5e7ec8d3f4b9e4be7820ec"
                  },
                  "active_epoch_no": {
                    "type": "integer",
                    "description": "Epoch number in which the update becomes active",
                    "example": 324
                  },
                  "vrf_key_hash": {
                    "type": "string",
                    "description": "Pool VRF key hash",
                    "example": "25efdad1bc12944d38e4e3c26c43565bec84973a812737b163b289e87d0d5ed3"
                  },
                  "margin": {
                    "type": "number",
                    "description": "Margin (decimal format)",
                    "example": 0.1
                  },
                  "fixed_cost": {
                    "type": "string",
                    "description": "Pool fixed cost per epoch",
                    "example": "500000000"
                  },
                  "pledge": {
                    "type": "string",
                    "description": "Pool pledge in lovelace",
                    "example": "64000000000000"
                  },
                  "reward_addr": {
                    "type": "string",
                    "description": "Pool reward address",
                    "example": "stake1uy6yzwsxxc28lfms0qmpxvyz9a7y770rtcqx9y96m42cttqwvp4m5"
                  },
                  "owners": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Pool (co)owner address",
                      "example": "stake1u8088wvudd7dp3rxl0v9xgng8r3j50s65ge3l3jvgd94keqfm3nv3"
                    }
                  },
                  "relays": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dns": {
                          "type": "string",
                          "nullable": true,
                          "description": "DNS name of the relay (nullable)",
                          "example": "relays-new.cardano-mainnet.iohk.io"
                        },
                        "srv": {
                          "type": "string",
                          "nullable": true,
                          "description": "DNS service name of the relay (nullable)",
                          "example": "biostakingpool3.hopto.org"
                        },
                        "ipv4": {
                          "type": "string",
                          "nullable": true,
                          "description": "IPv4 address of the relay (nullable)",
                          "example": "54.220.20.40"
                        },
                        "ipv6": {
                          "type": "string",
                          "nullable": true,
                          "description": "IPv6 address of the relay (nullable)",
                          "example": "2604:ed40:1000:1711:6082:78ff:fe0c:ebf"
                        },
                        "port": {
                          "type": "number",
                          "nullable": true,
                          "description": "Port number of the relay (nullable)",
                          "example": 6000
                        }
                      }
                    }
                  },
                  "meta_url": {
                    "type": "string",
                    "description": "Pool metadata URL",
                    "nullable": true,
                    "example": "https://pools.iohk.io/IOGP.json"
                  },
                  "meta_hash": {
                    "type": "string",
                    "description": "Pool metadata hash",
                    "nullable": true,
                    "example": "37eb004c0dd8a221ac3598ca1c6d6257fb5207ae9857b7c163ae0f39259d6cc0"
                  },
                  "meta_json": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Pool name",
                        "example": "Input Output Global (IOHK) - Private"
                      },
                      "ticker": {
                        "type": "string",
                        "description": "Pool ticker",
                        "example": "IOGP"
                      },
                      "homepage": {
                        "type": "string",
                        "description": "Pool homepage URL",
                        "example": "https://iohk.io"
                      },
                      "description": {
                        "type": "string",
                        "description": "Pool description",
                        "example": "Our mission is to provide economic identity to the billions of people who lack it. IOHK will not use the IOHK ticker."
                      }
                    }
                  },
                  "pool_status": {
                    "type": "string",
                    "description": "Pool status",
                    "enum": [
                      "registered",
                      "retiring",
                      "retired"
                    ],
                    "example": "registered"
                  },
                  "retiring_epoch": {
                    "type": "integer",
                    "description": "Announced retiring epoch (nullable)",
                    "example": null,
                    "nullable": true
                  },
                  "op_cert": {
                    "type": "string",
                    "nullable": true,
                    "description": "Pool latest operational certificate hash",
                    "example": "37eb004c0dd8a221ac3598ca1c6d6257fb5207ae9857b7c163ae0f39259d6cc0"
                  },
                  "op_cert_counter": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Pool latest operational certificate counter value",
                    "example": 8
                  },
                  "active_stake": {
                    "type": "string",
                    "nullable": true,
                    "description": "Pool active stake (will be null post epoch transition until dbsync calculation is complete)",
                    "example": "64328627680963"
                  },
                  "sigma": {
                    "type": "number",
                    "nullable": true,
                    "description": "Pool relative active stake share",
                    "example": 0.0034839235
                  },
                  "block_count": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Total pool blocks on chain",
                    "example": 4509
                  },
                  "live_pledge": {
                    "type": "string",
                    "nullable": true,
                    "description": "Summary of account balance for all pool owner's",
                    "example": "64328594406327"
                  },
                  "live_stake": {
                    "type": "string",
                    "nullable": true,
                    "description": "Pool live stake",
                    "example": "64328627680963"
                  },
                  "live_delegators": {
                    "type": "integer",
                    "description": "Pool live delegator count",
                    "example": 5
                  },
                  "live_saturation": {
                    "type": "number",
                    "nullable": true,
                    "description": "Pool live saturation (decimal format)",
                    "example": 94.52
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Pool Information",
    "description": "Current pool statuses and details for a specified list of pool ids",
    "path": "/pool_info",
    "method": "post"
  },
  {
    "tags": [
      "Pool"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_pool_bech32",
        "description": "Pool ID in bech32 format",
        "schema": {
          "type": "string",
          "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      }
    ],
    "responses": {
      "200": {
        "description": "Array of pool stake information for 3 snapshots",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "object",
                "properties": {
                  "snapshot": {
                    "type": "string",
                    "description": "Type of snapshot (\"Mark\", \"Set\" or \"Go\")",
                    "example": "Mark"
                  },
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number for the snapshot entry",
                    "example": 324
                  },
                  "nonce": {
                    "type": "string",
                    "description": "The nonce value for this epoch",
                    "example": "01304ddf5613166be96fce27be110747f2c8fcb38776618ee79225ccb59b81e2",
                    "nullable": true
                  },
                  "pool_stake": {
                    "type": "string",
                    "description": "Pool's Active Stake for the given epoch",
                    "example": "100000000000"
                  },
                  "active_stake": {
                    "type": "string",
                    "description": "Total Active Stake for the given epoch",
                    "example": "103703246364020"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Pool Stake Snapshot",
    "description": "Returns Mark, Set and Go stake snapshots for the selected pool, useful for leaderlog calculation",
    "path": "/pool_stake_snapshot",
    "method": "get"
  },
  {
    "tags": [
      "Pool"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_pool_bech32",
        "description": "Pool ID in bech32 format",
        "schema": {
          "type": "string",
          "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      }
    ],
    "responses": {
      "200": {
        "description": "Array of pool delegator information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "object",
                "properties": {
                  "stake_address": {
                    "type": "string",
                    "description": "Cardano staking address (reward account) in bech32 format",
                    "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Current delegator live stake (in lovelace)",
                    "example": 64328591517480
                  },
                  "active_epoch_no": {
                    "type": "integer",
                    "description": "Epoch number in which the delegation becomes active",
                    "example": 324
                  },
                  "latest_delegation_tx_hash": {
                    "type": "string",
                    "description": "Latest transaction hash used for delegation by the account",
                    "example": "368d08fe86804d637649341d3aec4a9baa7dffa6d00f16de2ba9dba814f1c948"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Pool Delegators List",
    "description": "Return information about live delegators for a given pool.",
    "path": "/pool_delegators",
    "method": "get"
  },
  {
    "tags": [
      "Pool"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_pool_bech32",
        "description": "Pool ID in bech32 format",
        "schema": {
          "type": "string",
          "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      },
      {
        "deprecated": false,
        "name": "_epoch_no",
        "description": "Epoch Number to fetch details for",
        "schema": {
          "type": "string",
          "example": 320
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of pool delegator information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "object",
                "properties": {
                  "stake_address": {
                    "type": "string",
                    "description": "Cardano staking address (reward account) in bech32 format",
                    "example": "stake1u8yxtugdv63wxafy9d00nuz6hjyyp4qnggvc9a3vxh8yl0ckml2uz"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Current delegator live stake (in lovelace)",
                    "example": 64328591517480
                  },
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number for the delegation history",
                    "example": 324
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Pool Delegators History",
    "description": "Return information about active delegators (incl. history) for a given pool and epoch number (all epochs if not specified).",
    "path": "/pool_delegators_history",
    "method": "get"
  },
  {
    "tags": [
      "Pool"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_pool_bech32",
        "description": "Pool ID in bech32 format",
        "schema": {
          "type": "string",
          "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      },
      {
        "deprecated": false,
        "name": "_epoch_no",
        "description": "Epoch Number to fetch details for",
        "schema": {
          "type": "string",
          "example": 320
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of blocks created by pool",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "object",
                "properties": {
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch number",
                    "example": 294
                  },
                  "epoch_slot": {
                    "type": "integer",
                    "description": "Slot number of the block in epoch",
                    "example": 75442
                  },
                  "abs_slot": {
                    "type": "integer",
                    "description": "Absolute slot number of the block",
                    "example": 53384242
                  },
                  "block_height": {
                    "type": "integer",
                    "description": "Block height",
                    "nullable": true,
                    "example": 42325043
                  },
                  "block_hash": {
                    "type": "string",
                    "description": "Hash of the block",
                    "example": "e8c6992d52cd74b577b79251e0351be25070797a0dbc486b2c284d0bf7aeea9c"
                  },
                  "block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the block",
                    "example": 1506635091
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Pool Blocks",
    "description": "Return information about blocks minted by a given pool for all epochs (or _epoch_no if provided)",
    "path": "/pool_blocks",
    "method": "get"
  },
  {
    "tags": [
      "Pool"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_pool_bech32",
        "description": "Pool ID in bech32 format",
        "schema": {
          "type": "string",
          "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      },
      {
        "deprecated": false,
        "name": "_epoch_no",
        "description": "Epoch Number to fetch details for",
        "schema": {
          "type": "string",
          "example": 320
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of pool history information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "epoch_no": {
                    "type": "integer",
                    "description": "Epoch for which the pool history data is shown",
                    "example": 312
                  },
                  "active_stake": {
                    "type": "string",
                    "description": "Amount of delegated stake to this pool at the time of epoch snapshot (in lovelaces)",
                    "example": "31235800000"
                  },
                  "active_stake_pct": {
                    "type": "number",
                    "description": "Active stake for the pool, expressed as a percentage of total active stake on network",
                    "example": 13.512182543475783
                  },
                  "saturation_pct": {
                    "type": "number",
                    "description": "Saturation percentage of a pool at the time of snapshot (2 decimals)",
                    "example": 45.32
                  },
                  "block_cnt": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Number of blocks pool created in that epoch",
                    "example": 14
                  },
                  "delegator_cnt": {
                    "type": "integer",
                    "description": "Number of delegators to the pool for that epoch snapshot",
                    "example": 1432
                  },
                  "margin": {
                    "type": "number",
                    "description": "Margin (decimal format)",
                    "example": 0.125
                  },
                  "fixed_cost": {
                    "type": "string",
                    "description": "Pool fixed cost per epoch (in lovelaces)",
                    "example": "340000000"
                  },
                  "pool_fees": {
                    "type": "string",
                    "description": "Total amount of fees earned by pool owners in that epoch (in lovelaces)",
                    "example": "123327382"
                  },
                  "deleg_rewards": {
                    "type": "string",
                    "description": "Total amount of rewards earned by delegators in that epoch (in lovelaces)",
                    "example": "123456789123"
                  },
                  "epoch_ros": {
                    "type": "number",
                    "description": "Annualized ROS (return on staking) for delegators for this epoch",
                    "example": 3.000340466
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Pool Stake, Block and Reward History",
    "description": "Return information about pool stake, block and reward history in a given epoch _epoch_no (or all epochs that pool existed for, in descending order if no _epoch_no was provided)",
    "path": "/pool_history",
    "method": "get"
  },
  {
    "tags": [
      "Pool"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_pool_bech32",
        "description": "Pool ID in bech32 format (optional)",
        "schema": {
          "type": "string",
          "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc"
        },
        "in": "query",
        "required": false,
        "allowEmptyValue": true
      }
    ],
    "responses": {
      "200": {
        "description": "Array of historical pool updates",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "tx_hash": {
                    "type": "string",
                    "description": "Hash identifier of the transaction",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "block_time": {
                    "type": "integer",
                    "description": "UNIX timestamp of the block",
                    "example": 1506635091
                  },
                  "pool_id_bech32": {
                    "type": "string",
                    "description": "Pool ID (bech32 format)",
                    "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc"
                  },
                  "pool_id_hex": {
                    "type": "string",
                    "description": "Pool ID (Hex format)",
                    "example": "a532904ca60e13e88437b58e7c6ff66b8d5e7ec8d3f4b9e4be7820ec"
                  },
                  "active_epoch_no": {
                    "type": "integer",
                    "description": "Epoch number in which the update becomes active",
                    "example": 324
                  },
                  "vrf_key_hash": {
                    "type": "string",
                    "description": "Pool VRF key hash",
                    "example": "25efdad1bc12944d38e4e3c26c43565bec84973a812737b163b289e87d0d5ed3"
                  },
                  "margin": {
                    "type": "number",
                    "description": "Margin (decimal format)",
                    "example": 0.1
                  },
                  "fixed_cost": {
                    "type": "string",
                    "description": "Pool fixed cost per epoch",
                    "example": "500000000"
                  },
                  "pledge": {
                    "type": "string",
                    "description": "Pool pledge in lovelace",
                    "example": "64000000000000"
                  },
                  "reward_addr": {
                    "type": "string",
                    "description": "Pool reward address",
                    "example": "stake1uy6yzwsxxc28lfms0qmpxvyz9a7y770rtcqx9y96m42cttqwvp4m5"
                  },
                  "owners": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Pool (co)owner address",
                      "example": "stake1u8088wvudd7dp3rxl0v9xgng8r3j50s65ge3l3jvgd94keqfm3nv3"
                    }
                  },
                  "relays": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dns": {
                          "type": "string",
                          "nullable": true,
                          "description": "DNS name of the relay (nullable)",
                          "example": "relays-new.cardano-mainnet.iohk.io"
                        },
                        "srv": {
                          "type": "string",
                          "nullable": true,
                          "description": "DNS service name of the relay (nullable)",
                          "example": "biostakingpool3.hopto.org"
                        },
                        "ipv4": {
                          "type": "string",
                          "nullable": true,
                          "description": "IPv4 address of the relay (nullable)",
                          "example": "54.220.20.40"
                        },
                        "ipv6": {
                          "type": "string",
                          "nullable": true,
                          "description": "IPv6 address of the relay (nullable)",
                          "example": "2604:ed40:1000:1711:6082:78ff:fe0c:ebf"
                        },
                        "port": {
                          "type": "number",
                          "nullable": true,
                          "description": "Port number of the relay (nullable)",
                          "example": 6000
                        }
                      }
                    }
                  },
                  "meta_url": {
                    "type": "string",
                    "description": "Pool metadata URL",
                    "nullable": true,
                    "example": "https://pools.iohk.io/IOGP.json"
                  },
                  "meta_hash": {
                    "type": "string",
                    "description": "Pool metadata hash",
                    "nullable": true,
                    "example": "37eb004c0dd8a221ac3598ca1c6d6257fb5207ae9857b7c163ae0f39259d6cc0"
                  },
                  "meta_json": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Pool name",
                        "example": "Input Output Global (IOHK) - Private"
                      },
                      "ticker": {
                        "type": "string",
                        "description": "Pool ticker",
                        "example": "IOGP"
                      },
                      "homepage": {
                        "type": "string",
                        "description": "Pool homepage URL",
                        "example": "https://iohk.io"
                      },
                      "description": {
                        "type": "string",
                        "description": "Pool description",
                        "example": "Our mission is to provide economic identity to the billions of people who lack it. IOHK will not use the IOHK ticker."
                      }
                    }
                  },
                  "pool_status": {
                    "type": "string",
                    "description": "Pool status",
                    "enum": [
                      "registered",
                      "retiring",
                      "retired"
                    ],
                    "example": "registered"
                  },
                  "retiring_epoch": {
                    "type": "integer",
                    "description": "Announced retiring epoch (nullable)",
                    "example": null,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Pool Updates (History)",
    "description": "Return all pool updates for all pools or only updates for specific pool if specified",
    "path": "/pool_updates",
    "method": "get"
  },
  {
    "tags": [
      "Pool"
    ],
    "responses": {
      "200": {
        "description": "Array of pool relay information",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pool_id_bech32": {
                    "type": "string",
                    "description": "Pool ID (bech32 format)",
                    "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc"
                  },
                  "relays": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dns": {
                          "type": "string",
                          "nullable": true,
                          "description": "DNS name of the relay (nullable)",
                          "example": "relays-new.cardano-mainnet.iohk.io"
                        },
                        "srv": {
                          "type": "string",
                          "nullable": true,
                          "description": "DNS service name of the relay (nullable)",
                          "example": "biostakingpool3.hopto.org"
                        },
                        "ipv4": {
                          "type": "string",
                          "nullable": true,
                          "description": "IPv4 address of the relay (nullable)",
                          "example": "54.220.20.40"
                        },
                        "ipv6": {
                          "type": "string",
                          "nullable": true,
                          "description": "IPv6 address of the relay (nullable)",
                          "example": "2604:ed40:1000:1711:6082:78ff:fe0c:ebf"
                        },
                        "port": {
                          "type": "number",
                          "nullable": true,
                          "description": "Port number of the relay (nullable)",
                          "example": 6000
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Pool Relays",
    "description": "A list of registered relays for all currently registered/retiring (not retired) pools",
    "path": "/pool_relays",
    "method": "get"
  },
  {
    "tags": [
      "Pool"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "_pool_bech32_ids": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano pool IDs (bech32 format)"
              }
            },
            "example": {
              "_pool_bech32_ids": [
                "pool100wj94uzf54vup2hdzk0afng4dhjaqggt7j434mtgm8v2gfvfgp",
                "pool102s2nqtea2hf5q0s4amj0evysmfnhrn4apyyhd4azcmsclzm96m",
                "pool102vsulhfx8ua2j9fwl2u7gv57fhhutc3tp6juzaefgrn7ae35wm"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Array of pool metadata",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pool_id_bech32": {
                    "type": "string",
                    "description": "Pool ID (bech32 format)",
                    "example": "pool155efqn9xpcf73pphkk88cmlkdwx4ulkg606tne970qswczg3asc"
                  },
                  "meta_url": {
                    "type": "string",
                    "description": "Pool metadata URL",
                    "nullable": true,
                    "example": "https://pools.iohk.io/IOGP.json"
                  },
                  "meta_hash": {
                    "type": "string",
                    "description": "Pool metadata hash",
                    "nullable": true,
                    "example": "37eb004c0dd8a221ac3598ca1c6d6257fb5207ae9857b7c163ae0f39259d6cc0"
                  },
                  "meta_json": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Pool name",
                        "example": "Input Output Global (IOHK) - Private"
                      },
                      "ticker": {
                        "type": "string",
                        "description": "Pool ticker",
                        "example": "IOGP"
                      },
                      "homepage": {
                        "type": "string",
                        "description": "Pool homepage URL",
                        "example": "https://iohk.io"
                      },
                      "description": {
                        "type": "string",
                        "description": "Pool description",
                        "example": "Our mission is to provide economic identity to the billions of people who lack it. IOHK will not use the IOHK ticker."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Pool Metadata",
    "description": "Metadata (on & off-chain) for all currently registered/retiring (not retired) pools",
    "path": "/pool_metadata",
    "method": "post"
  },
  {
    "tags": [
      "Script"
    ],
    "responses": {
      "200": {
        "description": "List of native script and creation tx hash pairs",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "script_hash": {
                    "type": "string",
                    "description": "Hash of a script",
                    "example": "d8480dc869b94b80e81ec91b0abe307279311fe0e7001a9488f61ff8"
                  },
                  "creation_tx_hash": {
                    "type": "string",
                    "description": "Hash of the script creation transaction",
                    "example": "fda6c7697009237975ffc30f36666addf4c6e2a2c6f90411a24431b700baaab1"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the script",
                    "enum": [
                      "timelock",
                      "multisig"
                    ],
                    "example": "timelock"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Native Script List",
    "description": "List of all existing native script hashes along with their creation transaction hashes",
    "path": "/native_script_list",
    "method": "get"
  },
  {
    "tags": [
      "Script"
    ],
    "responses": {
      "200": {
        "description": "List of Plutus script and creation tx hash pairs",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "script_hash": {
                    "type": "string",
                    "description": "Hash of a script",
                    "example": "d8480dc869b94b80e81ec91b0abe307279311fe0e7001a9488f61ff8"
                  },
                  "creation_tx_hash": {
                    "type": "string",
                    "description": "Hash of the script creation transaction",
                    "example": "fda6c7697009237975ffc30f36666addf4c6e2a2c6f90411a24431b700baaab1"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Plutus Script List",
    "description": "List of all existing Plutus script hashes along with their creation transaction hashes",
    "path": "/plutus_script_list",
    "method": "get"
  },
  {
    "tags": [
      "Script"
    ],
    "parameters": [
      {
        "deprecated": false,
        "name": "_script_hash",
        "description": "Script hash in hexadecimal format (hex)",
        "schema": {
          "type": "string",
          "example": "d8480dc869b94b80e81ec91b0abe307279311fe0e7001a9488f61ff8"
        },
        "in": "query",
        "required": true,
        "allowEmptyValue": false
      }
    ],
    "responses": {
      "200": {
        "description": "List of all redeemers for a given script hash",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "script_hash": {
                    "type": "string",
                    "description": "Hash of Transaction for which details are being shown",
                    "example": "f144a8264acf4bdfe2e1241170969c930d64ab6b0996a4a45237b623f1dd670e"
                  },
                  "redeemers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "tx_hash": {
                          "type": "string",
                          "description": "Hash of Transaction containing the redeemer",
                          "example": "fda6c7697009237975ffc30f36666addf4c6e2a2c6f90411a24431b700baaab1"
                        },
                        "tx_index": {
                          "type": "integer",
                          "description": "The index of the redeemer pointer in the transaction",
                          "example": 0
                        },
                        "unit_mem": {
                          "description": "The budget in Memory to run a script",
                          "example": 520448,
                          "nullable": true,
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          }
                        },
                        "unit_steps": {
                          "description": "The budget in Cpu steps to run a script",
                          "example": 211535239,
                          "nullable": true,
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          }
                        },
                        "fee": {
                          "type": "string",
                          "description": "The budget in fees to run a script - the fees depend on the ExUnits and the current prices",
                          "example": 45282
                        },
                        "purpose": {
                          "type": "string",
                          "description": "What kind of validation this redeemer is used for",
                          "enum": [
                            "spend",
                            "mint",
                            "cert",
                            "reward"
                          ],
                          "example": "spend"
                        },
                        "datum_hash": {
                          "type": "string",
                          "description": "The Hash of the Plutus Data",
                          "nullable": true,
                          "example": "5a595ce795815e81d22a1a522cf3987d546dc5bb016de61b002edd63a5413ec4"
                        },
                        "datum_value": {
                          "type": "object",
                          "description": "The actual data in json format",
                          "example": {
                            "bytes": "3c33"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Script Redeemers",
    "description": "List of all redeemers for a given script hash",
    "path": "/script_redeemers",
    "method": "get"
  },
  {
    "tags": [
      "Script"
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "_datum_hashes": {
                "format": "text",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of Cardano datum hashes"
              }
            },
            "example": {
              "_datum_hashes": [
                "818ee3db3bbbd04f9f2ce21778cac3ac605802a4fcb00c8b3a58ee2dafc17d46",
                "45b0cfc220ceec5b7c1c62c4d4193d38e4eba48e8815729ce75f9c0ab0e4c1c0"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "List of datum information for given datum hashes",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hash": {
                    "type": "string",
                    "description": "The Hash of the Plutus Data",
                    "nullable": true,
                    "example": "5a595ce795815e81d22a1a522cf3987d546dc5bb016de61b002edd63a5413ec4"
                  },
                  "value": {
                    "type": "object",
                    "description": "The actual data in json format",
                    "example": {
                      "bytes": "3c33"
                    }
                  },
                  "bytes": {
                    "type": "string",
                    "description": "Datum bytes (hex)",
                    "example": "19029a"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "The server cannot process the request due to invalid input"
      },
      "401": {
        "description": "The selected server has restricted the endpoint to be only usable via authentication. The authentication supplied was not authorized to access the endpoint"
      },
      "404": {
        "description": "The server does not recognise the combination of endpoint and parameters provided"
      }
    },
    "summary": "Datum Information",
    "description": "List of datum information for given datum hashes",
    "path": "/datum_info",
    "method": "post"
  }
]